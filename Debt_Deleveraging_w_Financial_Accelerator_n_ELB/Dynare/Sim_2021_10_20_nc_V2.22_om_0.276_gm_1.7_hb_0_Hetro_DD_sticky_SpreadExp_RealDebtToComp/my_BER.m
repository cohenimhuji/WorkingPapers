%
% Status : main Dynare file
%
% Warning : this file is generated automatically by Dynare
%           from model file (.mod)

if isoctave || matlab_ver_less_than('8.6')
    clear all
else
    clearvars -global
    clear_persistent_variables(fileparts(which('dynare')), false)
end
tic0 = tic;
% Save empty dates and dseries objects in memory.
dates('initialize');
dseries('initialize');
% Define global variables.
global M_ options_ oo_ estim_params_ bayestopt_ dataset_ dataset_info estimation_info ys0_ ex0_
options_ = [];
M_.fname = 'my_BER';
M_.dynare_version = '4.5.5';
oo_.dynare_version = '4.5.5';
options_.dynare_version = '4.5.5';
%
% Some global variables initialization
%
global_initialization;
diary off;
diary('my_BER.log');
M_.exo_names = 'e_Z';
M_.exo_names_tex = 'e\_Z';
M_.exo_names_long = 'e_Z';
M_.exo_names = char(M_.exo_names, 'K2Cltr_BAR');
M_.exo_names_tex = char(M_.exo_names_tex, 'K2Cltr\_BAR');
M_.exo_names_long = char(M_.exo_names_long, 'K2Cltr_BAR');
M_.exo_names = char(M_.exo_names, 'Depo2Cltr_f');
M_.exo_names_tex = char(M_.exo_names_tex, 'Depo2Cltr\_f');
M_.exo_names_long = char(M_.exo_names_long, 'Depo2Cltr_f');
M_.exo_names = char(M_.exo_names, 'K2Cltr_f');
M_.exo_names_tex = char(M_.exo_names_tex, 'K2Cltr\_f');
M_.exo_names_long = char(M_.exo_names_long, 'K2Cltr_f');
M_.exo_names = char(M_.exo_names, 'K2f');
M_.exo_names_tex = char(M_.exo_names_tex, 'K2f');
M_.exo_names_long = char(M_.exo_names_long, 'K2f');
M_.exo_names = char(M_.exo_names, 'e_delta');
M_.exo_names_tex = char(M_.exo_names_tex, 'e\_delta');
M_.exo_names_long = char(M_.exo_names_long, 'e_delta');
M_.exo_names = char(M_.exo_names, 'y_tilde');
M_.exo_names_tex = char(M_.exo_names_tex, 'y\_tilde');
M_.exo_names_long = char(M_.exo_names_long, 'y_tilde');
M_.exo_names = char(M_.exo_names, 'ExoZeroRate');
M_.exo_names_tex = char(M_.exo_names_tex, 'ExoZeroRate');
M_.exo_names_long = char(M_.exo_names_long, 'ExoZeroRate');
M_.exo_names = char(M_.exo_names, 'e_R_rp');
M_.exo_names_tex = char(M_.exo_names_tex, 'e\_R\_rp');
M_.exo_names_long = char(M_.exo_names_long, 'e_R_rp');
M_.exo_names = char(M_.exo_names, 'e_NW');
M_.exo_names_tex = char(M_.exo_names_tex, 'e\_NW');
M_.exo_names_long = char(M_.exo_names_long, 'e_NW');
M_.exo_names = char(M_.exo_names, 'e_Spread');
M_.exo_names_tex = char(M_.exo_names_tex, 'e\_Spread');
M_.exo_names_long = char(M_.exo_names_long, 'e_Spread');
M_.endo_names = 'Y_s';
M_.endo_names_tex = 'Y^s';
M_.endo_names_long = 'Y_s';
M_.endo_names = char(M_.endo_names, 'L_s');
M_.endo_names_tex = char(M_.endo_names_tex, 'L^s');
M_.endo_names_long = char(M_.endo_names_long, 'L_s');
M_.endo_names = char(M_.endo_names, 'C_s');
M_.endo_names_tex = char(M_.endo_names_tex, 'C^s');
M_.endo_names_long = char(M_.endo_names_long, 'C_s');
M_.endo_names = char(M_.endo_names, 'MU_s');
M_.endo_names_tex = char(M_.endo_names_tex, '\{mu}^s');
M_.endo_names_long = char(M_.endo_names_long, 'MU_s');
M_.endo_names = char(M_.endo_names, 'b_s');
M_.endo_names_tex = char(M_.endo_names_tex, 'b^s');
M_.endo_names_long = char(M_.endo_names_long, 'b_s');
M_.endo_names = char(M_.endo_names, 'R_s');
M_.endo_names_tex = char(M_.endo_names_tex, 'R^s');
M_.endo_names_long = char(M_.endo_names_long, 'R_s');
M_.endo_names = char(M_.endo_names, 'r_s');
M_.endo_names_tex = char(M_.endo_names_tex, 'r^s');
M_.endo_names_long = char(M_.endo_names_long, 'r_s');
M_.endo_names = char(M_.endo_names, 'b_f_s');
M_.endo_names_tex = char(M_.endo_names_tex, 'b^{s*}');
M_.endo_names_long = char(M_.endo_names_long, 'b_f_s');
M_.endo_names = char(M_.endo_names, 'R_f_s');
M_.endo_names_tex = char(M_.endo_names_tex, 'R^{s*}');
M_.endo_names_long = char(M_.endo_names_long, 'R_f_s');
M_.endo_names = char(M_.endo_names, 'r_f_s');
M_.endo_names_tex = char(M_.endo_names_tex, 'r^{s*}');
M_.endo_names_long = char(M_.endo_names_long, 'r_f_s');
M_.endo_names = char(M_.endo_names, 'TB_s');
M_.endo_names_tex = char(M_.endo_names_tex, 'TB^s');
M_.endo_names_long = char(M_.endo_names_long, 'TB_s');
M_.endo_names = char(M_.endo_names, 'DB_s');
M_.endo_names_tex = char(M_.endo_names_tex, 'DB^b');
M_.endo_names_long = char(M_.endo_names_long, 'DB_s');
M_.endo_names = char(M_.endo_names, 'Y_b');
M_.endo_names_tex = char(M_.endo_names_tex, 'Y^b');
M_.endo_names_long = char(M_.endo_names_long, 'Y_b');
M_.endo_names = char(M_.endo_names, 'K_b');
M_.endo_names_tex = char(M_.endo_names_tex, 'K_b');
M_.endo_names_long = char(M_.endo_names_long, 'K_b');
M_.endo_names = char(M_.endo_names, 'I_b');
M_.endo_names_tex = char(M_.endo_names_tex, 'I^b');
M_.endo_names_long = char(M_.endo_names_long, 'I_b');
M_.endo_names = char(M_.endo_names, 'I_AC_b');
M_.endo_names_tex = char(M_.endo_names_tex, 'I_{AC}^b');
M_.endo_names_long = char(M_.endo_names_long, 'I_AC_b');
M_.endo_names = char(M_.endo_names, 'I_MAC');
M_.endo_names_tex = char(M_.endo_names_tex, 'I_{MC}');
M_.endo_names_long = char(M_.endo_names_long, 'I_MAC');
M_.endo_names = char(M_.endo_names, 'L_b');
M_.endo_names_tex = char(M_.endo_names_tex, 'L^b');
M_.endo_names_long = char(M_.endo_names_long, 'L_b');
M_.endo_names = char(M_.endo_names, 'C_b');
M_.endo_names_tex = char(M_.endo_names_tex, 'C^b');
M_.endo_names_long = char(M_.endo_names_long, 'C_b');
M_.endo_names = char(M_.endo_names, 'MU_b');
M_.endo_names_tex = char(M_.endo_names_tex, '\{mu}^b');
M_.endo_names_long = char(M_.endo_names_long, 'MU_b');
M_.endo_names = char(M_.endo_names, 'b_b');
M_.endo_names_tex = char(M_.endo_names_tex, 'b^b');
M_.endo_names_long = char(M_.endo_names_long, 'b_b');
M_.endo_names = char(M_.endo_names, 'R_b');
M_.endo_names_tex = char(M_.endo_names_tex, 'R^b');
M_.endo_names_long = char(M_.endo_names_long, 'R_b');
M_.endo_names = char(M_.endo_names, 'r_b');
M_.endo_names_tex = char(M_.endo_names_tex, 'r^b');
M_.endo_names_long = char(M_.endo_names_long, 'r_b');
M_.endo_names = char(M_.endo_names, 'b_f_b');
M_.endo_names_tex = char(M_.endo_names_tex, 'b^{b*}');
M_.endo_names_long = char(M_.endo_names_long, 'b_f_b');
M_.endo_names = char(M_.endo_names, 'R_f_b');
M_.endo_names_tex = char(M_.endo_names_tex, 'R^{b*}');
M_.endo_names_long = char(M_.endo_names_long, 'R_f_b');
M_.endo_names = char(M_.endo_names, 'r_f_b');
M_.endo_names_tex = char(M_.endo_names_tex, 'r^{b*}');
M_.endo_names_long = char(M_.endo_names_long, 'r_f_b');
M_.endo_names = char(M_.endo_names, 'TB_b');
M_.endo_names_tex = char(M_.endo_names_tex, 'TB^b');
M_.endo_names_long = char(M_.endo_names_long, 'TB_b');
M_.endo_names = char(M_.endo_names, 'DB_b');
M_.endo_names_tex = char(M_.endo_names_tex, 'DB^b');
M_.endo_names_long = char(M_.endo_names_long, 'DB_b');
M_.endo_names = char(M_.endo_names, 'K2Cltr');
M_.endo_names_tex = char(M_.endo_names_tex, ' \Theta ');
M_.endo_names_long = char(M_.endo_names_long, 'K2Cltr');
M_.endo_names = char(M_.endo_names, 'Z');
M_.endo_names_tex = char(M_.endo_names_tex, 'Z');
M_.endo_names_long = char(M_.endo_names_long, 'Z');
M_.endo_names = char(M_.endo_names, 'TB');
M_.endo_names_tex = char(M_.endo_names_tex, 'TB');
M_.endo_names_long = char(M_.endo_names_long, 'TB');
M_.endo_names = char(M_.endo_names, 'pi_local_bank');
M_.endo_names_tex = char(M_.endo_names_tex, '\Pi^{local}_{banks}');
M_.endo_names_long = char(M_.endo_names_long, 'pi_local_bank');
M_.endo_names = char(M_.endo_names, 'pi_foreign_bank');
M_.endo_names_tex = char(M_.endo_names_tex, '\Pi^{foreign}_{banks}');
M_.endo_names_long = char(M_.endo_names_long, 'pi_foreign_bank');
M_.endo_names = char(M_.endo_names, 'pi_foreign_bank_from_b');
M_.endo_names_tex = char(M_.endo_names_tex, '\Pi^{foreign}_{banks}(b)');
M_.endo_names_long = char(M_.endo_names_long, 'pi_foreign_bank_from_b');
M_.endo_names = char(M_.endo_names, 'pi_foreign_bank_from_s');
M_.endo_names_tex = char(M_.endo_names_tex, '\Pi^{foreign}_{banks}(s)');
M_.endo_names_long = char(M_.endo_names_long, 'pi_foreign_bank_from_s');
M_.endo_names = char(M_.endo_names, 'Y');
M_.endo_names_tex = char(M_.endo_names_tex, 'Y');
M_.endo_names_long = char(M_.endo_names_long, 'Y');
M_.endo_names = char(M_.endo_names, 'PI_Y');
M_.endo_names_tex = char(M_.endo_names_tex, '\Pi^Y');
M_.endo_names_long = char(M_.endo_names_long, 'PI_Y');
M_.endo_names = char(M_.endo_names, 'K');
M_.endo_names_tex = char(M_.endo_names_tex, 'K');
M_.endo_names_long = char(M_.endo_names_long, 'K');
M_.endo_names = char(M_.endo_names, 'I');
M_.endo_names_tex = char(M_.endo_names_tex, 'I');
M_.endo_names_long = char(M_.endo_names_long, 'I');
M_.endo_names = char(M_.endo_names, 'L');
M_.endo_names_tex = char(M_.endo_names_tex, 'L');
M_.endo_names_long = char(M_.endo_names_long, 'L');
M_.endo_names = char(M_.endo_names, 'C');
M_.endo_names_tex = char(M_.endo_names_tex, 'C');
M_.endo_names_long = char(M_.endo_names_long, 'C');
M_.endo_names = char(M_.endo_names, 'K_L');
M_.endo_names_tex = char(M_.endo_names_tex, 'K/L');
M_.endo_names_long = char(M_.endo_names_long, 'K_L');
M_.endo_names = char(M_.endo_names, 'q');
M_.endo_names_tex = char(M_.endo_names_tex, 'q');
M_.endo_names_long = char(M_.endo_names_long, 'q');
M_.endo_names = char(M_.endo_names, 'w');
M_.endo_names_tex = char(M_.endo_names_tex, 'w');
M_.endo_names_long = char(M_.endo_names_long, 'w');
M_.endo_names = char(M_.endo_names, 'C_diff');
M_.endo_names_tex = char(M_.endo_names_tex, ' C_s / C  ');
M_.endo_names_long = char(M_.endo_names_long, 'C_diff');
M_.endo_names = char(M_.endo_names, 'Spread_R_b');
M_.endo_names_tex = char(M_.endo_names_tex, 'Spread_R_b');
M_.endo_names_long = char(M_.endo_names_long, 'Spread_R_b');
M_.endo_names = char(M_.endo_names, 'shock_Spread');
M_.endo_names_tex = char(M_.endo_names_tex, 'Shock to Spread R_b');
M_.endo_names_long = char(M_.endo_names_long, 'shock_Spread');
M_.endo_names = char(M_.endo_names, 'shock_spread_ann');
M_.endo_names_tex = char(M_.endo_names_tex, 'Shock to spread r_b ann.');
M_.endo_names_long = char(M_.endo_names_long, 'shock_spread_ann');
M_.endo_names = char(M_.endo_names, 'R_s_nom');
M_.endo_names_tex = char(M_.endo_names_tex, ' R^s_{nom}');
M_.endo_names_long = char(M_.endo_names_long, 'R_s_nom');
M_.endo_names = char(M_.endo_names, 'r_s_nom');
M_.endo_names_tex = char(M_.endo_names_tex, ' r^s_{nom}');
M_.endo_names_long = char(M_.endo_names_long, 'r_s_nom');
M_.endo_names = char(M_.endo_names, 'R_b_nom');
M_.endo_names_tex = char(M_.endo_names_tex, ' R^b_{nom}');
M_.endo_names_long = char(M_.endo_names_long, 'R_b_nom');
M_.endo_names = char(M_.endo_names, 'r_b_nom');
M_.endo_names_tex = char(M_.endo_names_tex, ' r^b_{nom}');
M_.endo_names_long = char(M_.endo_names_long, 'r_b_nom');
M_.endo_names = char(M_.endo_names, 'Pi');
M_.endo_names_tex = char(M_.endo_names_tex, ' \Pi ');
M_.endo_names_long = char(M_.endo_names_long, 'Pi');
M_.endo_names = char(M_.endo_names, 'pi');
M_.endo_names_tex = char(M_.endo_names_tex, ' \pi ');
M_.endo_names_long = char(M_.endo_names_long, 'pi');
M_.endo_names = char(M_.endo_names, 'y_hat');
M_.endo_names_tex = char(M_.endo_names_tex, ' \hat{y} ');
M_.endo_names_long = char(M_.endo_names_long, 'y_hat');
M_.endo_names = char(M_.endo_names, 'y_gap');
M_.endo_names_tex = char(M_.endo_names_tex, ' \hat{y} - \tilde{y} ');
M_.endo_names_long = char(M_.endo_names_long, 'y_gap');
M_.endo_names = char(M_.endo_names, 'shock_R_rp');
M_.endo_names_tex = char(M_.endo_names_tex, ' Risk Premium Shock ');
M_.endo_names_long = char(M_.endo_names_long, 'shock_R_rp');
M_.endo_names = char(M_.endo_names, 'r_CB_nom');
M_.endo_names_tex = char(M_.endo_names_tex, ' r^{CB}_{nom}');
M_.endo_names_long = char(M_.endo_names_long, 'r_CB_nom');
M_.endo_names = char(M_.endo_names, 'E_Pi');
M_.endo_names_tex = char(M_.endo_names_tex, ' E[\Pi] ');
M_.endo_names_long = char(M_.endo_names_long, 'E_Pi');
M_.endo_names = char(M_.endo_names, 'R_b_Euler');
M_.endo_names_tex = char(M_.endo_names_tex, ' R^b_{Euler} ');
M_.endo_names_long = char(M_.endo_names_long, 'R_b_Euler');
M_.endo_names = char(M_.endo_names, 'delta_Check');
M_.endo_names_tex = char(M_.endo_names_tex, 'delta\_Check');
M_.endo_names_long = char(M_.endo_names_long, 'delta_Check');
M_.endo_names = char(M_.endo_names, 'r_n');
M_.endo_names_tex = char(M_.endo_names_tex, ' r^n ');
M_.endo_names_long = char(M_.endo_names_long, 'r_n');
M_.endo_names = char(M_.endo_names, 'I_AC');
M_.endo_names_tex = char(M_.endo_names_tex, 'I_{AC}');
M_.endo_names_long = char(M_.endo_names_long, 'I_AC');
M_.endo_names = char(M_.endo_names, 'Y_prod');
M_.endo_names_tex = char(M_.endo_names_tex, 'Y\_prod');
M_.endo_names_long = char(M_.endo_names_long, 'Y_prod');
M_.endo_names = char(M_.endo_names, 'Yb_diff');
M_.endo_names_tex = char(M_.endo_names_tex, 'Yb\_diff');
M_.endo_names_long = char(M_.endo_names_long, 'Yb_diff');
M_.endo_names = char(M_.endo_names, 'b_gdp');
M_.endo_names_tex = char(M_.endo_names_tex, ' b / Y^B_{ann.} ');
M_.endo_names_long = char(M_.endo_names_long, 'b_gdp');
M_.endo_names = char(M_.endo_names, 'b_f_b_gdp');
M_.endo_names_tex = char(M_.endo_names_tex, ' b^{B*}/ Y_{ann.} ');
M_.endo_names_long = char(M_.endo_names_long, 'b_f_b_gdp');
M_.endo_names = char(M_.endo_names, 'b_gdp_tot');
M_.endo_names_tex = char(M_.endo_names_tex, 'b/ Y_{ann.} ');
M_.endo_names_long = char(M_.endo_names_long, 'b_gdp_tot');
M_.endo_names = char(M_.endo_names, 'w_diff');
M_.endo_names_tex = char(M_.endo_names_tex, 'w\_diff');
M_.endo_names_long = char(M_.endo_names_long, 'w_diff');
M_.endo_names = char(M_.endo_names, 'MC');
M_.endo_names_tex = char(M_.endo_names_tex, 'MC');
M_.endo_names_long = char(M_.endo_names_long, 'MC');
M_.endo_names = char(M_.endo_names, 'MC_hat');
M_.endo_names_tex = char(M_.endo_names_tex, ' \hat{MC} ');
M_.endo_names_long = char(M_.endo_names_long, 'MC_hat');
M_.endo_names = char(M_.endo_names, 'b_BAR');
M_.endo_names_tex = char(M_.endo_names_tex, ' \bar{b} ');
M_.endo_names_long = char(M_.endo_names_long, 'b_BAR');
M_.endo_names = char(M_.endo_names, 'b_f_b_limK');
M_.endo_names_tex = char(M_.endo_names_tex, ' \bar{b^{b*}} ');
M_.endo_names_long = char(M_.endo_names_long, 'b_f_b_limK');
M_.endo_names = char(M_.endo_names, 'b_f_s_limK');
M_.endo_names_tex = char(M_.endo_names_tex, ' \bar{b^{s*}} ');
M_.endo_names_long = char(M_.endo_names_long, 'b_f_s_limK');
M_.endo_names = char(M_.endo_names, 'r_n_imp');
M_.endo_names_tex = char(M_.endo_names_tex, 'r^n_{implied}');
M_.endo_names_long = char(M_.endo_names_long, 'r_n_imp');
M_.endo_names = char(M_.endo_names, 'm_b');
M_.endo_names_tex = char(M_.endo_names_tex, ' m_b ');
M_.endo_names_long = char(M_.endo_names_long, 'm_b');
M_.endo_names = char(M_.endo_names, 'm_s');
M_.endo_names_tex = char(M_.endo_names_tex, ' m_s ');
M_.endo_names_long = char(M_.endo_names_long, 'm_s');
M_.endo_names = char(M_.endo_names, 'Rk');
M_.endo_names_tex = char(M_.endo_names_tex, ' R_k ');
M_.endo_names_long = char(M_.endo_names_long, 'Rk');
M_.endo_names = char(M_.endo_names, 'Qk');
M_.endo_names_tex = char(M_.endo_names_tex, ' Q_k ');
M_.endo_names_long = char(M_.endo_names_long, 'Qk');
M_.endo_names = char(M_.endo_names, 'Ri');
M_.endo_names_tex = char(M_.endo_names_tex, ' R_i ');
M_.endo_names_long = char(M_.endo_names_long, 'Ri');
M_.endo_names = char(M_.endo_names, 'NetWorth_b');
M_.endo_names_tex = char(M_.endo_names_tex, ' NetWorth_b ');
M_.endo_names_long = char(M_.endo_names_long, 'NetWorth_b');
M_.endo_names = char(M_.endo_names, 'LeverageRatio_b');
M_.endo_names_tex = char(M_.endo_names_tex, ' b^b / (Q * K^b) ');
M_.endo_names_long = char(M_.endo_names_long, 'LeverageRatio_b');
M_.endo_names = char(M_.endo_names, 'r_s_annu');
M_.endo_names_tex = char(M_.endo_names_tex, 'r^s_{ann.}');
M_.endo_names_long = char(M_.endo_names_long, 'r_s_annu');
M_.endo_names = char(M_.endo_names, 'r_f_s_annu');
M_.endo_names_tex = char(M_.endo_names_tex, 'r^{s*}_{ann.}');
M_.endo_names_long = char(M_.endo_names_long, 'r_f_s_annu');
M_.endo_names = char(M_.endo_names, 'r_b_annu');
M_.endo_names_tex = char(M_.endo_names_tex, 'r^b_{ann.}');
M_.endo_names_long = char(M_.endo_names_long, 'r_b_annu');
M_.endo_names = char(M_.endo_names, 'r_f_b_annu');
M_.endo_names_tex = char(M_.endo_names_tex, 'r^{b*}_{ann.}');
M_.endo_names_long = char(M_.endo_names_long, 'r_f_b_annu');
M_.endo_names = char(M_.endo_names, 'spread_r_b_annu');
M_.endo_names_tex = char(M_.endo_names_tex, ' (r_b - r_s)_{ann.} ');
M_.endo_names_long = char(M_.endo_names_long, 'spread_r_b_annu');
M_.endo_names = char(M_.endo_names, 'spread_r_k_annu');
M_.endo_names_tex = char(M_.endo_names_tex, ' (r_k - r_s)_{ann.} ');
M_.endo_names_long = char(M_.endo_names_long, 'spread_r_k_annu');
M_.endo_names = char(M_.endo_names, 'r_s_nom_annu');
M_.endo_names_tex = char(M_.endo_names_tex, ' r^s_{nom.ann.}');
M_.endo_names_long = char(M_.endo_names_long, 'r_s_nom_annu');
M_.endo_names = char(M_.endo_names, 'r_CB_nom_annu');
M_.endo_names_tex = char(M_.endo_names_tex, ' i_{ann.}');
M_.endo_names_long = char(M_.endo_names_long, 'r_CB_nom_annu');
M_.endo_names = char(M_.endo_names, 'r_RP_annu');
M_.endo_names_tex = char(M_.endo_names_tex, ' r^{RP}_{ann.}');
M_.endo_names_long = char(M_.endo_names_long, 'r_RP_annu');
M_.endo_names = char(M_.endo_names, 'r_b_nom_annu');
M_.endo_names_tex = char(M_.endo_names_tex, ' r^b_{nom.ann.}');
M_.endo_names_long = char(M_.endo_names_long, 'r_b_nom_annu');
M_.endo_names = char(M_.endo_names, 'pi_annu');
M_.endo_names_tex = char(M_.endo_names_tex, ' \pi_{ann.} ');
M_.endo_names_long = char(M_.endo_names_long, 'pi_annu');
M_.endo_names = char(M_.endo_names, 'r_b_Euler_annu');
M_.endo_names_tex = char(M_.endo_names_tex, ' r^{b.Euler}_{ann.} ');
M_.endo_names_long = char(M_.endo_names_long, 'r_b_Euler_annu');
M_.endo_names = char(M_.endo_names, 'E_pi_annu');
M_.endo_names_tex = char(M_.endo_names_tex, ' E[\pi]_{ann.} ');
M_.endo_names_long = char(M_.endo_names_long, 'E_pi_annu');
M_.endo_names = char(M_.endo_names, 'r_k_annu');
M_.endo_names_tex = char(M_.endo_names_tex, ' r^k_{ann.} ');
M_.endo_names_long = char(M_.endo_names_long, 'r_k_annu');
M_.endo_names = char(M_.endo_names, 'delta');
M_.endo_names_tex = char(M_.endo_names_tex, '\delta ');
M_.endo_names_long = char(M_.endo_names_long, 'delta');
M_.endo_names = char(M_.endo_names, 'MU_REP');
M_.endo_names_tex = char(M_.endo_names_tex, '\{mu}^{REP}');
M_.endo_names_long = char(M_.endo_names_long, 'MU_REP');
M_.endo_names = char(M_.endo_names, 'm_REP');
M_.endo_names_tex = char(M_.endo_names_tex, ' m_REP ');
M_.endo_names_long = char(M_.endo_names_long, 'm_REP');
M_.endo_names = char(M_.endo_names, 'R_REP_Euler');
M_.endo_names_tex = char(M_.endo_names_tex, ' R^{REP}_{Euler} ');
M_.endo_names_long = char(M_.endo_names_long, 'R_REP_Euler');
M_.endo_names = char(M_.endo_names, 'r_REP_Euler_annu');
M_.endo_names_tex = char(M_.endo_names_tex, ' r^{REP.Euler}_{ann.} ');
M_.endo_names_long = char(M_.endo_names_long, 'r_REP_Euler_annu');
M_.endo_names = char(M_.endo_names, 'E_Pi_s');
M_.endo_names_tex = char(M_.endo_names_tex, ' E[\Pi]^{s} ');
M_.endo_names_long = char(M_.endo_names_long, 'E_Pi_s');
M_.endo_names = char(M_.endo_names, 'E_pi_s_annu');
M_.endo_names_tex = char(M_.endo_names_tex, ' E[\pi]_{ann.}^{s} ');
M_.endo_names_long = char(M_.endo_names_long, 'E_pi_s_annu');
M_.endo_names = char(M_.endo_names, 'E_Pi_REP');
M_.endo_names_tex = char(M_.endo_names_tex, ' E[\Pi]^{REP} ');
M_.endo_names_long = char(M_.endo_names_long, 'E_Pi_REP');
M_.endo_names = char(M_.endo_names, 'E_pi_REP_annu');
M_.endo_names_tex = char(M_.endo_names_tex, ' E[\pi]_{ann.}^{REP} ');
M_.endo_names_long = char(M_.endo_names_long, 'E_pi_REP_annu');
M_.endo_names = char(M_.endo_names, 'r_Taylor');
M_.endo_names_tex = char(M_.endo_names_tex, ' r_{Taylor} ');
M_.endo_names_long = char(M_.endo_names_long, 'r_Taylor');
M_.endo_names = char(M_.endo_names, 'r_Taylor_NEW');
M_.endo_names_tex = char(M_.endo_names_tex, ' r_{Taylor}^{NEW} ');
M_.endo_names_long = char(M_.endo_names_long, 'r_Taylor_NEW');
M_.endo_names = char(M_.endo_names, 'GiftFromBorrowers');
M_.endo_names_tex = char(M_.endo_names_tex, ' Gift From Borrowers ');
M_.endo_names_long = char(M_.endo_names_long, 'GiftFromBorrowers');
M_.endo_names = char(M_.endo_names, 'shock_NW');
M_.endo_names_tex = char(M_.endo_names_tex, ' Net Worth Shock ');
M_.endo_names_long = char(M_.endo_names_long, 'shock_NW');
M_.endo_partitions = struct();
M_.param_names = 'setup';
M_.param_names_tex = 'setup';
M_.param_names_long = 'setup';
M_.param_names = char(M_.param_names, 'beta_s');
M_.param_names_tex = char(M_.param_names_tex, '\beta_s');
M_.param_names_long = char(M_.param_names_long, 'beta_s');
M_.param_names = char(M_.param_names, 'beta_b');
M_.param_names_tex = char(M_.param_names_tex, 'beta\_b');
M_.param_names_long = char(M_.param_names_long, 'beta_b');
M_.param_names = char(M_.param_names, 'beta_f');
M_.param_names_tex = char(M_.param_names_tex, 'beta\_f');
M_.param_names_long = char(M_.param_names_long, 'beta_f');
M_.param_names = char(M_.param_names, 'sigma_s');
M_.param_names_tex = char(M_.param_names_tex, '\sigma_s');
M_.param_names_long = char(M_.param_names_long, 'sigma_s');
M_.param_names = char(M_.param_names, 'sigma_b');
M_.param_names_tex = char(M_.param_names_tex, 'sigma\_b');
M_.param_names_long = char(M_.param_names_long, 'sigma_b');
M_.param_names = char(M_.param_names, 'phi');
M_.param_names_tex = char(M_.param_names_tex, '\phi_{local}');
M_.param_names_long = char(M_.param_names_long, 'phi');
M_.param_names = char(M_.param_names, 'nu');
M_.param_names_tex = char(M_.param_names_tex, '\nu ');
M_.param_names_long = char(M_.param_names_long, 'nu');
M_.param_names = char(M_.param_names, 'phi_f_s');
M_.param_names_tex = char(M_.param_names_tex, '\phi_{foreign}^s');
M_.param_names_long = char(M_.param_names_long, 'phi_f_s');
M_.param_names = char(M_.param_names, 'phi_f_b');
M_.param_names_tex = char(M_.param_names_tex, '\phi_{foreign}^b');
M_.param_names_long = char(M_.param_names_long, 'phi_f_b');
M_.param_names = char(M_.param_names, 'nu_f_b');
M_.param_names_tex = char(M_.param_names_tex, '\nu_{foreign}^b ');
M_.param_names_long = char(M_.param_names_long, 'nu_f_b');
M_.param_names = char(M_.param_names, 'K2Cltr_H');
M_.param_names_tex = char(M_.param_names_tex, 'K2Colleteral^{High}');
M_.param_names_long = char(M_.param_names_long, 'K2Cltr_H');
M_.param_names = char(M_.param_names, 'K2Cltr_L');
M_.param_names_tex = char(M_.param_names_tex, 'K2Colleteral^{Low}');
M_.param_names_long = char(M_.param_names_long, 'K2Cltr_L');
M_.param_names = char(M_.param_names, 'Depo2Cltr_f_H');
M_.param_names_tex = char(M_.param_names_tex, ' Depo2Cltr_f^{High} ');
M_.param_names_long = char(M_.param_names_long, 'Depo2Cltr_f_H');
M_.param_names = char(M_.param_names, 'Depo2Cltr_f_L');
M_.param_names_tex = char(M_.param_names_tex, ' Depo2Cltr_f^{Low} ');
M_.param_names_long = char(M_.param_names_long, 'Depo2Cltr_f_L');
M_.param_names = char(M_.param_names, 'K2Cltr_f_H');
M_.param_names_tex = char(M_.param_names_tex, ' K2Colleteral_f^{High}');
M_.param_names_long = char(M_.param_names_long, 'K2Cltr_f_H');
M_.param_names = char(M_.param_names, 'K2Cltr_f_L');
M_.param_names_tex = char(M_.param_names_tex, ' K2Colleteral_f^{Low}');
M_.param_names_long = char(M_.param_names_long, 'K2Cltr_f_L');
M_.param_names = char(M_.param_names, 'K2f_h');
M_.param_names_tex = char(M_.param_names_tex, 'K2f\_h');
M_.param_names_long = char(M_.param_names_long, 'K2f_h');
M_.param_names = char(M_.param_names, 'K2f_l');
M_.param_names_tex = char(M_.param_names_tex, 'K2f\_l');
M_.param_names_long = char(M_.param_names_long, 'K2f_l');
M_.param_names = char(M_.param_names, 'Z_BAR');
M_.param_names_tex = char(M_.param_names_tex, 'Z\_BAR');
M_.param_names_long = char(M_.param_names_long, 'Z_BAR');
M_.param_names = char(M_.param_names, 'alpha');
M_.param_names_tex = char(M_.param_names_tex, '\alpha ');
M_.param_names_long = char(M_.param_names_long, 'alpha');
M_.param_names = char(M_.param_names, 'p_delta');
M_.param_names_tex = char(M_.param_names_tex, ' p \delta ');
M_.param_names_long = char(M_.param_names_long, 'p_delta');
M_.param_names = char(M_.param_names, 'chi_b');
M_.param_names_tex = char(M_.param_names_tex, '\chi^b ');
M_.param_names_long = char(M_.param_names_long, 'chi_b');
M_.param_names = char(M_.param_names, 'omega_s');
M_.param_names_tex = char(M_.param_names_tex, '\omega^s ');
M_.param_names_long = char(M_.param_names_long, 'omega_s');
M_.param_names = char(M_.param_names, 'omega_b');
M_.param_names_tex = char(M_.param_names_tex, '\omega^b ');
M_.param_names_long = char(M_.param_names_long, 'omega_b');
M_.param_names = char(M_.param_names, 'h_s');
M_.param_names_tex = char(M_.param_names_tex, 'h^s ');
M_.param_names_long = char(M_.param_names_long, 'h_s');
M_.param_names = char(M_.param_names, 'h_b');
M_.param_names_tex = char(M_.param_names_tex, 'h^b ');
M_.param_names_long = char(M_.param_names_long, 'h_b');
M_.param_names = char(M_.param_names, 'L_BAR');
M_.param_names_tex = char(M_.param_names_tex, 'L\_BAR');
M_.param_names_long = char(M_.param_names_long, 'L_BAR');
M_.param_names = char(M_.param_names, 'gamma2_b');
M_.param_names_tex = char(M_.param_names_tex, '\gamma_2_b');
M_.param_names_long = char(M_.param_names_long, 'gamma2_b');
M_.param_names = char(M_.param_names, 'kappa');
M_.param_names_tex = char(M_.param_names_tex, '\kappa');
M_.param_names_long = char(M_.param_names_long, 'kappa');
M_.param_names = char(M_.param_names, 'phi_pi');
M_.param_names_tex = char(M_.param_names_tex, '\phi_{\pi}');
M_.param_names_long = char(M_.param_names_long, 'phi_pi');
M_.param_names = char(M_.param_names, 'phi_y');
M_.param_names_tex = char(M_.param_names_tex, '\phi_{y}');
M_.param_names_long = char(M_.param_names_long, 'phi_y');
M_.param_names = char(M_.param_names, 'Pi_BAR');
M_.param_names_tex = char(M_.param_names_tex, ' \bar{\Pi} ');
M_.param_names_long = char(M_.param_names_long, 'Pi_BAR');
M_.param_names = char(M_.param_names, 'ZLB_min');
M_.param_names_tex = char(M_.param_names_tex, 'ZLB\_min');
M_.param_names_long = char(M_.param_names_long, 'ZLB_min');
M_.param_names = char(M_.param_names, 'REP_Model');
M_.param_names_tex = char(M_.param_names_tex, 'REP\_Model');
M_.param_names_long = char(M_.param_names_long, 'REP_Model');
M_.param_names = char(M_.param_names, 'std_e_Z');
M_.param_names_tex = char(M_.param_names_tex, ' \sigma(e^Z) ');
M_.param_names_long = char(M_.param_names_long, 'std_e_Z');
M_.param_names = char(M_.param_names, 'rho_e_Z');
M_.param_names_tex = char(M_.param_names_tex, ' \rho(e^Z) ');
M_.param_names_long = char(M_.param_names_long, 'rho_e_Z');
M_.param_names = char(M_.param_names, 'std_e_delta');
M_.param_names_tex = char(M_.param_names_tex, ' \sigma(e^{\delta}) ');
M_.param_names_long = char(M_.param_names_long, 'std_e_delta');
M_.param_names = char(M_.param_names, 'rho_e_delta');
M_.param_names_tex = char(M_.param_names_tex, ' \rho(e^{\delta}) ');
M_.param_names_long = char(M_.param_names_long, 'rho_e_delta');
M_.param_names = char(M_.param_names, 'std_e_NW');
M_.param_names_tex = char(M_.param_names_tex, '\sigma(e^NW) ');
M_.param_names_long = char(M_.param_names_long, 'std_e_NW');
M_.param_names = char(M_.param_names, 'rho_e_NW');
M_.param_names_tex = char(M_.param_names_tex, '\rho(e^NW) ');
M_.param_names_long = char(M_.param_names_long, 'rho_e_NW');
M_.param_names = char(M_.param_names, 'std_e_r_rp');
M_.param_names_tex = char(M_.param_names_tex, '\sigma(e^{RP}) ');
M_.param_names_long = char(M_.param_names_long, 'std_e_r_rp');
M_.param_names = char(M_.param_names, 'rho_e_R_rp');
M_.param_names_tex = char(M_.param_names_tex, '\rho(e^{RP}) ');
M_.param_names_long = char(M_.param_names_long, 'rho_e_R_rp');
M_.param_names = char(M_.param_names, 'std_e_Spread');
M_.param_names_tex = char(M_.param_names_tex, '\sigma(e^{Spread}) ');
M_.param_names_long = char(M_.param_names_long, 'std_e_Spread');
M_.param_names = char(M_.param_names, 'rho_e_Spread');
M_.param_names_tex = char(M_.param_names_tex, '\rho(e^{Spread}) ');
M_.param_names_long = char(M_.param_names_long, 'rho_e_Spread');
M_.param_names = char(M_.param_names, 'ConstBL');
M_.param_names_tex = char(M_.param_names_tex, ' Constant Borrowing Limit ');
M_.param_names_long = char(M_.param_names_long, 'ConstBL');
M_.param_names = char(M_.param_names, 'BLwoQ');
M_.param_names_tex = char(M_.param_names_tex, ' Borrowing Limit without Capital  Price ');
M_.param_names_long = char(M_.param_names_long, 'BLwoQ');
M_.param_names = char(M_.param_names, 'rho_K2Cltr');
M_.param_names_tex = char(M_.param_names_tex, 'rho\_K2Cltr');
M_.param_names_long = char(M_.param_names_long, 'rho_K2Cltr');
M_.param_names = char(M_.param_names, 'EndZeroRateTime');
M_.param_names_tex = char(M_.param_names_tex, 'EndZeroRateTime');
M_.param_names_long = char(M_.param_names_long, 'EndZeroRateTime');
M_.param_names = char(M_.param_names, 'start_t');
M_.param_names_tex = char(M_.param_names_tex, 'start\_t');
M_.param_names_long = char(M_.param_names_long, 'start_t');
M_.param_names = char(M_.param_names, 'irf_periods_to_disp');
M_.param_names_tex = char(M_.param_names_tex, 'irf\_periods\_to\_disp');
M_.param_names_long = char(M_.param_names_long, 'irf_periods_to_disp');
M_.param_names = char(M_.param_names, 'save_irf_xls');
M_.param_names_tex = char(M_.param_names_tex, 'save\_irf\_xls');
M_.param_names_long = char(M_.param_names_long, 'save_irf_xls');
M_.param_names = char(M_.param_names, 'R_s_SS');
M_.param_names_tex = char(M_.param_names_tex, 'R\_s\_SS');
M_.param_names_long = char(M_.param_names_long, 'R_s_SS');
M_.param_names = char(M_.param_names, 'R_b_Euler_SS');
M_.param_names_tex = char(M_.param_names_tex, 'R\_b\_Euler\_SS');
M_.param_names_long = char(M_.param_names_long, 'R_b_Euler_SS');
M_.param_names = char(M_.param_names, 'R_s_nom_SS');
M_.param_names_tex = char(M_.param_names_tex, 'R\_s\_nom\_SS');
M_.param_names_long = char(M_.param_names_long, 'R_s_nom_SS');
M_.param_names = char(M_.param_names, 'R_b_nom_SS_H');
M_.param_names_tex = char(M_.param_names_tex, 'R\_b\_nom\_SS\_H');
M_.param_names_long = char(M_.param_names_long, 'R_b_nom_SS_H');
M_.param_names = char(M_.param_names, 'R_b_nom_SS_L');
M_.param_names_tex = char(M_.param_names_tex, 'R\_b\_nom\_SS\_L');
M_.param_names_long = char(M_.param_names_long, 'R_b_nom_SS_L');
M_.param_names = char(M_.param_names, 'b_f_b_BAR_h');
M_.param_names_tex = char(M_.param_names_tex, 'b\_f\_b\_BAR\_h');
M_.param_names_long = char(M_.param_names_long, 'b_f_b_BAR_h');
M_.param_names = char(M_.param_names, 'b_f_s_BAR_h');
M_.param_names_tex = char(M_.param_names_tex, 'b\_f\_s\_BAR\_h');
M_.param_names_long = char(M_.param_names_long, 'b_f_s_BAR_h');
M_.param_names = char(M_.param_names, 'b_b_SS_H');
M_.param_names_tex = char(M_.param_names_tex, 'b\_b\_SS\_H');
M_.param_names_long = char(M_.param_names_long, 'b_b_SS_H');
M_.param_names = char(M_.param_names, 'b_b_SS_L');
M_.param_names_tex = char(M_.param_names_tex, 'b\_b\_SS\_L');
M_.param_names_long = char(M_.param_names_long, 'b_b_SS_L');
M_.param_names = char(M_.param_names, 'b_s_SS_H');
M_.param_names_tex = char(M_.param_names_tex, 'b\_s\_SS\_H');
M_.param_names_long = char(M_.param_names_long, 'b_s_SS_H');
M_.param_names = char(M_.param_names, 'b_s_SS_L');
M_.param_names_tex = char(M_.param_names_tex, 'b\_s\_SS\_L');
M_.param_names_long = char(M_.param_names_long, 'b_s_SS_L');
M_.param_names = char(M_.param_names, 'TB_s_BAR_h');
M_.param_names_tex = char(M_.param_names_tex, 'TB\_s\_BAR\_h');
M_.param_names_long = char(M_.param_names_long, 'TB_s_BAR_h');
M_.param_names = char(M_.param_names, 'TB_b_BAR_h');
M_.param_names_tex = char(M_.param_names_tex, 'TB\_b\_BAR\_h');
M_.param_names_long = char(M_.param_names_long, 'TB_b_BAR_h');
M_.param_names = char(M_.param_names, 'TB_BAR_h');
M_.param_names_tex = char(M_.param_names_tex, 'TB\_BAR\_h');
M_.param_names_long = char(M_.param_names_long, 'TB_BAR_h');
M_.param_names = char(M_.param_names, 'DB_b_BAR_h');
M_.param_names_tex = char(M_.param_names_tex, 'DB\_b\_BAR\_h');
M_.param_names_long = char(M_.param_names_long, 'DB_b_BAR_h');
M_.param_names = char(M_.param_names, 'DB_s_BAR_h');
M_.param_names_tex = char(M_.param_names_tex, 'DB\_s\_BAR\_h');
M_.param_names_long = char(M_.param_names_long, 'DB_s_BAR_h');
M_.param_names = char(M_.param_names, 'b_f_b_BAR_l');
M_.param_names_tex = char(M_.param_names_tex, 'b\_f\_b\_BAR\_l');
M_.param_names_long = char(M_.param_names_long, 'b_f_b_BAR_l');
M_.param_names = char(M_.param_names, 'b_f_s_BAR_l');
M_.param_names_tex = char(M_.param_names_tex, 'b\_f\_s\_BAR\_l');
M_.param_names_long = char(M_.param_names_long, 'b_f_s_BAR_l');
M_.param_names = char(M_.param_names, 'TB_s_BAR_l');
M_.param_names_tex = char(M_.param_names_tex, 'TB\_s\_BAR\_l');
M_.param_names_long = char(M_.param_names_long, 'TB_s_BAR_l');
M_.param_names = char(M_.param_names, 'TB_b_BAR_l');
M_.param_names_tex = char(M_.param_names_tex, 'TB\_b\_BAR\_l');
M_.param_names_long = char(M_.param_names_long, 'TB_b_BAR_l');
M_.param_names = char(M_.param_names, 'TB_BAR_l');
M_.param_names_tex = char(M_.param_names_tex, 'TB\_BAR\_l');
M_.param_names_long = char(M_.param_names_long, 'TB_BAR_l');
M_.param_names = char(M_.param_names, 'DB_b_BAR_l');
M_.param_names_tex = char(M_.param_names_tex, 'DB\_b\_BAR\_l');
M_.param_names_long = char(M_.param_names_long, 'DB_b_BAR_l');
M_.param_names = char(M_.param_names, 'DB_s_BAR_l');
M_.param_names_tex = char(M_.param_names_tex, 'DB\_s\_BAR\_l');
M_.param_names_long = char(M_.param_names_long, 'DB_s_BAR_l');
M_.param_names = char(M_.param_names, 'q_BAR');
M_.param_names_tex = char(M_.param_names_tex, 'q\_BAR');
M_.param_names_long = char(M_.param_names_long, 'q_BAR');
M_.param_names = char(M_.param_names, 'K_L_BAR');
M_.param_names_tex = char(M_.param_names_tex, 'K\_L\_BAR');
M_.param_names_long = char(M_.param_names_long, 'K_L_BAR');
M_.param_names = char(M_.param_names, 'w_BAR');
M_.param_names_tex = char(M_.param_names_tex, 'w\_BAR');
M_.param_names_long = char(M_.param_names_long, 'w_BAR');
M_.param_names = char(M_.param_names, 'K_BAR');
M_.param_names_tex = char(M_.param_names_tex, 'K\_BAR');
M_.param_names_long = char(M_.param_names_long, 'K_BAR');
M_.param_names = char(M_.param_names, 'I_BAR');
M_.param_names_tex = char(M_.param_names_tex, 'I\_BAR');
M_.param_names_long = char(M_.param_names_long, 'I_BAR');
M_.param_names = char(M_.param_names, 'Y_BAR');
M_.param_names_tex = char(M_.param_names_tex, 'Y\_BAR');
M_.param_names_long = char(M_.param_names_long, 'Y_BAR');
M_.param_names = char(M_.param_names, 'C_b_BAR_h');
M_.param_names_tex = char(M_.param_names_tex, 'C\_b\_BAR\_h');
M_.param_names_long = char(M_.param_names_long, 'C_b_BAR_h');
M_.param_names = char(M_.param_names, 'MU_b_BAR_h');
M_.param_names_tex = char(M_.param_names_tex, 'MU\_b\_BAR\_h');
M_.param_names_long = char(M_.param_names_long, 'MU_b_BAR_h');
M_.param_names = char(M_.param_names, 'C_s_BAR_h');
M_.param_names_tex = char(M_.param_names_tex, 'C\_s\_BAR\_h');
M_.param_names_long = char(M_.param_names_long, 'C_s_BAR_h');
M_.param_names = char(M_.param_names, 'MU_s_BAR_h');
M_.param_names_tex = char(M_.param_names_tex, 'MU\_s\_BAR\_h');
M_.param_names_long = char(M_.param_names_long, 'MU_s_BAR_h');
M_.param_names = char(M_.param_names, 'C_b_BAR_l');
M_.param_names_tex = char(M_.param_names_tex, 'C\_b\_BAR\_l');
M_.param_names_long = char(M_.param_names_long, 'C_b_BAR_l');
M_.param_names = char(M_.param_names, 'MU_b_BAR_l');
M_.param_names_tex = char(M_.param_names_tex, 'MU\_b\_BAR\_l');
M_.param_names_long = char(M_.param_names_long, 'MU_b_BAR_l');
M_.param_names = char(M_.param_names, 'C_s_BAR_l');
M_.param_names_tex = char(M_.param_names_tex, 'C\_s\_BAR\_l');
M_.param_names_long = char(M_.param_names_long, 'C_s_BAR_l');
M_.param_names = char(M_.param_names, 'MU_s_BAR_l');
M_.param_names_tex = char(M_.param_names_tex, 'MU\_s\_BAR\_l');
M_.param_names_long = char(M_.param_names_long, 'MU_s_BAR_l');
M_.param_names = char(M_.param_names, 'chi_s');
M_.param_names_tex = char(M_.param_names_tex, 'chi\_s');
M_.param_names_long = char(M_.param_names_long, 'chi_s');
M_.param_names = char(M_.param_names, 'vartheta_s');
M_.param_names_tex = char(M_.param_names_tex, '\vartheta^s');
M_.param_names_long = char(M_.param_names_long, 'vartheta_s');
M_.param_names = char(M_.param_names, 'vartheta_b');
M_.param_names_tex = char(M_.param_names_tex, '\vartheta^b');
M_.param_names_long = char(M_.param_names_long, 'vartheta_b');
M_.param_names = char(M_.param_names, 'MC_BAR');
M_.param_names_tex = char(M_.param_names_tex, 'MC\_BAR');
M_.param_names_long = char(M_.param_names_long, 'MC_BAR');
M_.param_names = char(M_.param_names, 'b_f_b_limK_BAR_h');
M_.param_names_tex = char(M_.param_names_tex, 'b\_f\_b\_limK\_BAR\_h');
M_.param_names_long = char(M_.param_names_long, 'b_f_b_limK_BAR_h');
M_.param_names = char(M_.param_names, 'b_f_b_limK_BAR_l');
M_.param_names_tex = char(M_.param_names_tex, 'b\_f\_b\_limK\_BAR\_l');
M_.param_names_long = char(M_.param_names_long, 'b_f_b_limK_BAR_l');
M_.param_names = char(M_.param_names, 'b_BAR_SS_H');
M_.param_names_tex = char(M_.param_names_tex, 'b\_BAR\_SS\_H');
M_.param_names_long = char(M_.param_names_long, 'b_BAR_SS_H');
M_.param_names = char(M_.param_names, 'b_BAR_SS_L');
M_.param_names_tex = char(M_.param_names_tex, 'b\_BAR\_SS\_L');
M_.param_names_long = char(M_.param_names_long, 'b_BAR_SS_L');
M_.param_names = char(M_.param_names, 'b_f_s_limK_BAR_h');
M_.param_names_tex = char(M_.param_names_tex, 'b\_f\_s\_limK\_BAR\_h');
M_.param_names_long = char(M_.param_names_long, 'b_f_s_limK_BAR_h');
M_.param_names = char(M_.param_names, 'b_f_s_limK_BAR_l');
M_.param_names_tex = char(M_.param_names_tex, 'b\_f\_s\_limK\_BAR\_l');
M_.param_names_long = char(M_.param_names_long, 'b_f_s_limK_BAR_l');
M_.param_names = char(M_.param_names, 'I_b_BAR');
M_.param_names_tex = char(M_.param_names_tex, 'I\_b\_BAR');
M_.param_names_long = char(M_.param_names_long, 'I_b_BAR');
M_.param_names = char(M_.param_names, 'K_b_BAR');
M_.param_names_tex = char(M_.param_names_tex, 'K\_b\_BAR');
M_.param_names_long = char(M_.param_names_long, 'K_b_BAR');
M_.param_names = char(M_.param_names, 'R_world');
M_.param_names_tex = char(M_.param_names_tex, 'R\_world');
M_.param_names_long = char(M_.param_names_long, 'R_world');
M_.param_names = char(M_.param_names, 'p_R_rp');
M_.param_names_tex = char(M_.param_names_tex, 'p\_R\_rp');
M_.param_names_long = char(M_.param_names_long, 'p_R_rp');
M_.param_partitions = struct();
M_.exo_det_nbr = 0;
M_.exo_nbr = 11;
M_.endo_nbr = 109;
M_.param_nbr = 103;
M_.orig_endo_nbr = 109;
M_.aux_vars = [];
M_.Sigma_e = zeros(11, 11);
M_.Correlation_matrix = eye(11, 11);
M_.H = 0;
M_.Correlation_matrix_ME = 1;
M_.sigma_e_is_diagonal = 1;
M_.det_shocks = [];
options_.block=0;
options_.bytecode=0;
options_.use_dll=0;
M_.hessian_eq_zero = 1;
erase_compiled_function('my_BER_static');
erase_compiled_function('my_BER_dynamic');
M_.orig_eq_nbr = 109;
M_.eq_nbr = 109;
M_.ramsey_eq_nbr = 0;
M_.set_auxiliary_variables = exist(['./' M_.fname '_set_auxiliary_variables.m'], 'file') == 2;
M_.lead_lag_incidence = [
 0 20 0;
 0 21 0;
 1 22 129;
 2 23 0;
 3 24 0;
 0 25 0;
 0 26 0;
 4 27 0;
 0 28 0;
 0 29 0;
 0 30 0;
 0 31 0;
 0 32 0;
 5 33 130;
 6 34 0;
 0 35 0;
 0 36 131;
 0 37 0;
 7 38 132;
 8 39 0;
 9 40 0;
 0 41 0;
 0 42 0;
 10 43 0;
 0 44 0;
 0 45 0;
 0 46 0;
 0 47 0;
 11 48 0;
 12 49 0;
 0 50 0;
 0 51 0;
 0 52 0;
 0 53 0;
 0 54 0;
 0 55 0;
 0 56 0;
 0 57 0;
 13 58 133;
 0 59 0;
 14 60 134;
 0 61 0;
 0 62 135;
 0 63 0;
 0 64 0;
 0 65 0;
 15 66 0;
 0 67 0;
 0 68 0;
 0 69 0;
 0 70 0;
 0 71 0;
 0 72 136;
 0 73 137;
 0 74 0;
 0 75 0;
 16 76 0;
 0 77 0;
 0 78 0;
 0 79 0;
 0 80 0;
 0 81 0;
 0 82 0;
 0 83 0;
 0 84 0;
 0 85 0;
 0 86 0;
 0 87 0;
 0 88 0;
 0 89 0;
 0 90 0;
 0 91 0;
 0 92 0;
 0 93 0;
 0 94 0;
 0 95 138;
 0 96 139;
 0 97 0;
 0 98 140;
 0 99 0;
 0 100 0;
 0 101 0;
 0 102 0;
 0 103 0;
 0 104 0;
 0 105 0;
 0 106 0;
 0 107 0;
 0 108 0;
 0 109 0;
 0 110 0;
 0 111 0;
 0 112 0;
 0 113 0;
 0 114 0;
 0 115 0;
 17 116 0;
 18 117 0;
 0 118 141;
 0 119 0;
 0 120 0;
 0 121 0;
 0 122 0;
 0 123 0;
 0 124 0;
 0 125 0;
 0 126 0;
 0 127 0;
 19 128 0;]';
M_.nstatic = 82;
M_.nfwrd   = 8;
M_.npred   = 14;
M_.nboth   = 5;
M_.nsfwrd   = 13;
M_.nspred   = 19;
M_.ndynamic   = 27;
M_.equations_tags = {
};
M_.static_and_dynamic_models_differ = 0;
M_.exo_names_orig_ord = [1:11];
M_.maximum_lag = 1;
M_.maximum_lead = 1;
M_.maximum_endo_lag = 1;
M_.maximum_endo_lead = 1;
oo_.steady_state = zeros(109, 1);
M_.maximum_exo_lag = 0;
M_.maximum_exo_lead = 0;
oo_.exo_steady_state = zeros(11, 1);
M_.params = NaN(103, 1);
M_.NNZDerivatives = [330; 0; -1];
filename = 'IO_DATA.xlsx' ;
[input_M, input_name] 			= xlsread(filename, 'input');
[FlexModel_IRF,FlexModel_input_name] 	= xlsread(filename, 'y_tilde');
xlswrite(filename, cell(300,100)  , 'output', 'A1');
xlswrite(filename, {'Start simulations at: ', datestr(clock)}  , 'output', 'H1');
pg1 =	{	'b_BAR'		,	'b_b' 		,	'b_gdp_tot'				;
'spread_r_b_annu'	,	'r_b_annu'  ,	'r_s_annu'  	;		
'r_k_annu' 		, 'r_b_nom_annu',	'r_s_nom_annu'		};
pg2 =	{	'C'				,	'C_b' 		,	'C_s'				;
'L'				,	'L_b' 		,	'L_s'				;
'I'				,	'K'  		,	'Qk'  				};
pg3 =	{	'Y'				,	'Y_b' 		,	'Y_s'				;
'C_diff'		,	'w' 		,	'q'					;
'pi_annu'		,	'E_pi_annu' ,	'MC'  				};
pg4 =	{	'E_pi_s_annu'	,'E_pi_REP_annu',	'r_RP_annu'			;
'r_n'			,'r_b_Euler_annu',	'r_REP_Euler_annu'	;
'r_Taylor'		,'delta' 	    ,	'NetWorth_b' 		};
pg5 =	{	'K_L'			,	'I_AC_b' 	,	'I_MAC'				;
'K2Cltr'		,	'b_f_b_limK',	'b_f_s_limK'		;
'b_gdp'			,	'b_f_b_gdp'	,	'b_gdp_tot'  		};
pg6 =	{	'pi_foreign_bank_from_b','Y_prod',	'Yb_diff'			;
'PI_Y'			,	'delta_Check',	'w_diff'			;
'pi_local_bank'	,	'LeverageRatio_b'  	,	'b_gdp_tot'	};			
pg7 =	{	'DB_b'			,	'TB_b' 		,	'TB_s'				;
'b_b'			,	'b_f_b' 	,	'shock_spread_ann'	;   
'y_gap'			,	'y_hat'		,	'GiftFromBorrowers'	};							
pg8 =	{	'Y'				,	'pi_annu' 	,	'r_CB_nom_annu'		;
'b_b'			,	'Qk' 		,	'spread_r_k_annu'	;   
'C'				,	'I'			,	'r_s_annu'	};							
disply  = 	{pg1 ; pg2 ; pg3; pg4; pg5; pg6; pg7; pg8; pg1; pg2; pg3; pg4; pg5; pg6; pg7; pg8 };
Legend_Fig_Num = 1 ; 
Legend_subPlot_Num = 1 ; 
ch_2= 2*ones(3,3); 
pg1c=[	1	1  2 	;
2	2  2	;
2	2  2  ] ;
pg2c=[	1	1  1 	;
1	1  1	;
1	1  1  ] ;
pg3c=[	1	1  1 	;
2	1  1	;
2  	2  1  ] ;
pg4c=[	2	2  2 	;
2	2  2	;
2	2  1  ] ;
pg5c=[	2	1  1 	;
1	1  1	;
2	2  2  ] ;
pg6c=[	1	1  1 	;
1	1  1	;
1	2  2  ] ;
pg7c=[	1	1  1 	;
1	1  1	;
1	1  1  ] ;
pg8c=[	1	2  2 	;
1	1  2	;
1	1  2  ] ;
choice_display_arr	= {ch_2;ch_2;ch_2;ch_2;ch_2;ch_2;ch_2;ch_2; pg1c;pg2c;pg3c;pg4c;pg5c;pg6c;pg7c;pg8c};	
zero3 = zeros(3,3); 
ones3 = ones(3,3);
pg1_save =	[	0	0  0 	;
0	0  0 	;
0	0  1  ] ;			
pg2_save =	[	1	0	0	;
1	0	0	;
1	0	0 ]	;			
pg3_save =	[ 	1 	0 	0	; 
0	1	1	;
0	0	1 ]	;    
pg3_save_only_Y =		[ 	1 	0 	0	; 
0	0	0	;
0	0	0 ]	;
pg4_save =	[ 	0 	0 	0	; 
0	0	1	;
0	0	1 ]	;
choice_save_xls_arr = {zero3;zero3;zero3;zero3;zero3;zero3;zero3;zero3;		 zero3;zero3; pg3_save_only_Y; zero3;zero3;zero3;zero3;zero3};	
params_display = [7, 8, 25, 29, 27, 44]; 			
tot_Graph_num = size(input_M,2);
saved_steady_state_start = [];
saved_steady_state_end = [];
for scenario = 1:tot_Graph_num
disp(['Running simulation ', num2str(scenario), ' of ' ,num2str(tot_Graph_num)]);
M_.params( 1 ) = input_M(1,scenario);
setup = M_.params( 1 );
M_.params( 2 ) = input_M(2,scenario);
beta_s = M_.params( 2 );
M_.params( 3 ) = input_M(3,scenario);
beta_b = M_.params( 3 );
M_.params( 4 ) = input_M(4,scenario);
beta_f = M_.params( 4 );
M_.params( 5 ) = input_M(5,scenario);
sigma_s = M_.params( 5 );
M_.params( 6 ) = input_M(6,scenario);
sigma_b = M_.params( 6 );
M_.params( 7 ) = input_M(7,scenario);
phi = M_.params( 7 );
M_.params( 8 ) = input_M(8,scenario);
nu = M_.params( 8 );
M_.params( 9 ) = input_M(9,scenario);
phi_f_s = M_.params( 9 );
M_.params( 10 ) = input_M(10,scenario);
phi_f_b = M_.params( 10 );
M_.params( 11 ) = input_M(11,scenario);
nu_f_b = M_.params( 11 );
M_.params( 12 ) = input_M(12,scenario);
K2Cltr_H = M_.params( 12 );
M_.params( 13 ) = input_M(13,scenario);
K2Cltr_L = M_.params( 13 );
M_.params( 14 ) = input_M(14,scenario);
Depo2Cltr_f_H = M_.params( 14 );
M_.params( 15 ) = input_M(15,scenario);
Depo2Cltr_f_L = M_.params( 15 );
M_.params( 16 ) = input_M(16,scenario);
K2Cltr_f_H = M_.params( 16 );
M_.params( 17 ) = input_M(17,scenario);
K2Cltr_f_L = M_.params( 17 );
M_.params( 18 ) = input_M(18,scenario);
K2f_h = M_.params( 18 );
M_.params( 19 ) = input_M(19,scenario);
K2f_l = M_.params( 19 );
M_.params( 20 ) = input_M(20,scenario);
Z_BAR = M_.params( 20 );
M_.params( 21 ) = input_M(21,scenario);
alpha = M_.params( 21 );
M_.params( 22 ) = input_M(22,scenario);
p_delta = M_.params( 22 );
M_.params( 23 ) = input_M(23,scenario);
chi_b = M_.params( 23 );
M_.params( 90 ) = 1-M_.params(23);
chi_s = M_.params( 90 );
M_.params( 24 ) = input_M(24,scenario);
omega_s = M_.params( 24 );
M_.params( 25 ) = input_M(25,scenario);
omega_b = M_.params( 25 );
M_.params( 26 ) = input_M(26,scenario);
h_s = M_.params( 26 );
M_.params( 27 ) = input_M(27,scenario);
h_b = M_.params( 27 );
M_.params( 28 ) = input_M(28,scenario);
L_BAR = M_.params( 28 );
M_.params( 29 ) = input_M(29,scenario);
gamma2_b = M_.params( 29 );
M_.params( 30 ) = input_M(30,scenario);
kappa = M_.params( 30 );
M_.params( 31 ) = input_M(31,scenario);
phi_pi = M_.params( 31 );
M_.params( 32 ) = input_M(32,scenario);
phi_y = M_.params( 32 );
M_.params( 33 ) = input_M(33,scenario);
Pi_BAR = M_.params( 33 );
M_.params( 34 ) = input_M(34,scenario);
ZLB_min = M_.params( 34 );
M_.params( 35 ) = input_M(35,scenario);
REP_Model = M_.params( 35 );
M_.params( 36 ) = input_M(36,scenario);
std_e_Z = M_.params( 36 );
M_.params( 37 ) = input_M(37,scenario);
rho_e_Z = M_.params( 37 );
M_.params( 38 ) = input_M(38,scenario);
std_e_delta = M_.params( 38 );
M_.params( 39 ) = input_M(39,scenario);
rho_e_delta = M_.params( 39 );
M_.params( 40 ) = input_M(40,scenario);
std_e_NW = M_.params( 40 );
M_.params( 41 ) = input_M(41,scenario);
rho_e_NW = M_.params( 41 );
M_.params( 103 ) = input_M(42,scenario);
p_R_rp = M_.params( 103 );
M_.params( 42 ) = input_M(43,scenario);
std_e_r_rp = M_.params( 42 );
M_.params( 43 ) = input_M(44,scenario);
rho_e_R_rp = M_.params( 43 );
M_.params( 44 ) = input_M(45,scenario);
std_e_Spread = M_.params( 44 );
M_.params( 45 ) = input_M(46,scenario);
rho_e_Spread = M_.params( 45 );
M_.params( 46 ) = input_M(47,scenario);
ConstBL = M_.params( 46 );
M_.params( 47 ) = input_M(48,scenario);
BLwoQ = M_.params( 47 );
M_.params( 48 ) = input_M(49,scenario);
rho_K2Cltr = M_.params( 48 );
M_.params( 49 ) = input_M(50,scenario);
EndZeroRateTime = M_.params( 49 );
vector_ExoZeroRate = zeros(200,1);		
vector_ExoZeroRate(EndZeroRateTime+1:end, 1)  = 1;
M_.params( 50 ) = input_M(60,scenario);
start_t = M_.params( 50 );
M_.params( 51 ) = input_M(61,scenario);
irf_periods_to_disp = M_.params( 51 );
M_.params( 52 ) = input_M(62,scenario);
save_irf_xls = M_.params( 52 );
M_.params( 102 ) = 1/M_.params(4);
R_world = M_.params( 102 );
M_.params( 53 ) = 1/M_.params(2);
R_s_SS = M_.params( 53 );
M_.params( 55 ) = M_.params(53)*M_.params(33);
R_s_nom_SS = M_.params( 55 );
M_.params( 54 ) = 1/M_.params(3);
R_b_Euler_SS = M_.params( 54 );
M_.params( 76 ) = 1/M_.params(3)-(1-M_.params(22));
q_BAR = M_.params( 76 );
M_.params( 77 ) = (M_.params(76)/(M_.params(21)*M_.params(20)))^(1/(M_.params(21)-1));
K_L_BAR = M_.params( 77 );
M_.params( 78 ) = M_.params(20)*(1-M_.params(21))*M_.params(77)^M_.params(21);
w_BAR = M_.params( 78 );
M_.params( 79 ) = M_.params(77)*M_.params(28);
K_BAR = M_.params( 79 );
M_.params( 80 ) = M_.params(22)*M_.params(79);
I_BAR = M_.params( 80 );
M_.params( 93 ) = (M_.params(76)/M_.params(21))^M_.params(21)*(M_.params(78)/(1-M_.params(21)))^(1-M_.params(21))*1/M_.params(20);
MC_BAR = M_.params( 93 );
M_.params( 81 ) = M_.params(20)*M_.params(79)^M_.params(21)*M_.params(28)^(1-M_.params(21));
Y_BAR = M_.params( 81 );
M_.params( 101 ) = M_.params(79)/M_.params(23);
K_b_BAR = M_.params( 101 );
M_.params( 100 ) = M_.params(80)/M_.params(23);
I_b_BAR = M_.params( 100 );
M_.params( 96 ) = M_.params(12)*(M_.params(101)-M_.params(101)*M_.params(18));
b_BAR_SS_H = M_.params( 96 );
M_.params( 97 ) = M_.params(13)*(M_.params(101)-M_.params(101)*M_.params(19));
b_BAR_SS_L = M_.params( 97 );
M_.params( 60 ) = M_.params(96)*(1+(M_.params(54)/M_.params(53)-1)/(M_.params(7)+M_.params(8)));
b_b_SS_H = M_.params( 60 );
M_.params( 61 ) = (1+(M_.params(54)/M_.params(53)-1)/(M_.params(7)+M_.params(8)))*M_.params(97);
b_b_SS_L = M_.params( 61 );
M_.params( 62 ) = (-M_.params(23))/M_.params(90)*M_.params(60);
b_s_SS_H = M_.params( 62 );
M_.params( 63 ) = (-M_.params(23))/M_.params(90)*M_.params(61);
b_s_SS_L = M_.params( 63 );
Spread_R_b_SS_H	= 1 + phi *(b_b_SS_H/b_BAR_SS_H - 1) ;
Spread_R_b_SS_L	= 1 + phi *(b_b_SS_L/b_BAR_SS_L - 1) ;	
R_b_SS_H 		= R_s_SS * Spread_R_b_SS_H  ;  	
R_b_SS_L 		= R_s_SS * Spread_R_b_SS_L  ;	
M_.params( 56 ) = M_.params(33)*R_b_SS_H;
R_b_nom_SS_H = M_.params( 56 );
M_.params( 57 ) = M_.params(33)*R_b_SS_L;
R_b_nom_SS_L = M_.params( 57 );
M_.params( 67 ) = M_.params(60)*(1/M_.params(33)-1/M_.params(56));
DB_b_BAR_h = M_.params( 67 );
M_.params( 68 ) = M_.params(62)*(1/M_.params(33)-1/M_.params(55));
DB_s_BAR_h = M_.params( 68 );
M_.params( 74 ) = M_.params(61)*(1/M_.params(33)-1/M_.params(57));
DB_b_BAR_l = M_.params( 74 );
M_.params( 75 ) = (1/M_.params(33)-1/M_.params(55))*M_.params(63);
DB_s_BAR_l = M_.params( 75 );
M_.params( 94 ) = M_.params(101)*M_.params(18)*M_.params(16);
b_f_b_limK_BAR_h = M_.params( 94 );
M_.params( 95 ) = M_.params(101)*M_.params(19)*M_.params(17);
b_f_b_limK_BAR_l = M_.params( 95 );
M_.params( 58 ) = 0;
b_f_b_BAR_h = M_.params( 58 );
M_.params( 69 ) = 0;
b_f_b_BAR_l = M_.params( 69 );
M_.params( 98 ) = M_.params(14)*(-M_.params(62));
b_f_s_limK_BAR_h = M_.params( 98 );
M_.params( 99 ) = M_.params(15)*(-M_.params(63));
b_f_s_limK_BAR_l = M_.params( 99 );
M_.params( 59 ) = 0;
b_f_s_BAR_h = M_.params( 59 );
M_.params( 70 ) = 0;
b_f_s_BAR_l = M_.params( 70 );
M_.params( 64 ) = M_.params(59)*(1-1/M_.params(53));
TB_s_BAR_h = M_.params( 64 );
M_.params( 65 ) = M_.params(58)*(1-1/R_b_SS_H);
TB_b_BAR_h = M_.params( 65 );
M_.params( 66 ) = M_.params(23)*M_.params(65)+M_.params(90)*M_.params(64);
TB_BAR_h = M_.params( 66 );
M_.params( 71 ) = (1-1/M_.params(53))*M_.params(70);
TB_s_BAR_l = M_.params( 71 );
M_.params( 72 ) = M_.params(69)*(1-1/R_b_SS_L);
TB_b_BAR_l = M_.params( 72 );
M_.params( 73 ) = M_.params(23)*M_.params(72)+M_.params(90)*M_.params(71);
TB_BAR_l = M_.params( 73 );
M_.params( 82 ) = M_.params(28)*M_.params(78)+(M_.params(76)/M_.params(22)-1)*M_.params(100)-M_.params(67)-M_.params(65);
C_b_BAR_h = M_.params( 82 );
M_.params( 86 ) = M_.params(28)*M_.params(78)+(M_.params(76)/M_.params(22)-1)*M_.params(100)-M_.params(74)-M_.params(72);
C_b_BAR_l = M_.params( 86 );
M_.params( 83 ) = (1-M_.params(3)*M_.params(27))*((1-M_.params(27))*M_.params(82))^(-M_.params(6));
MU_b_BAR_h = M_.params( 83 );
M_.params( 87 ) = (1-M_.params(3)*M_.params(27))*((1-M_.params(27))*M_.params(86))^(-M_.params(6));
MU_b_BAR_l = M_.params( 87 );
M_.params( 92 ) = M_.params(78)*M_.params(28)^(-M_.params(25))*M_.params(87);
vartheta_b = M_.params( 92 );
M_.params( 84 ) = M_.params(28)*M_.params(78)-M_.params(68)-M_.params(64);
C_s_BAR_h = M_.params( 84 );
M_.params( 88 ) = M_.params(28)*M_.params(78)-M_.params(75)-M_.params(71);
C_s_BAR_l = M_.params( 88 );
M_.params( 85 ) = (1-M_.params(2)*M_.params(26))*((1-M_.params(26))*M_.params(84))^(-M_.params(5));
MU_s_BAR_h = M_.params( 85 );
M_.params( 89 ) = (1-M_.params(2)*M_.params(26))*((1-M_.params(26))*M_.params(88))^(-M_.params(5));
MU_s_BAR_l = M_.params( 89 );
M_.params( 91 ) = M_.params(78)*M_.params(28)^(-M_.params(24))*M_.params(89);
vartheta_s = M_.params( 91 );
phi_pi_xxx = 1;	
%
% INITVAL instructions
%
options_.initval_file = 0;
oo_.exo_steady_state( 7 ) = 0;
oo_.exo_steady_state( 8 ) = 1;
oo_.steady_state( 30 ) = M_.params(20);
oo_.exo_steady_state( 1 ) = 0;
oo_.exo_steady_state( 6 ) = 0;
oo_.steady_state( 97 ) = M_.params(22);
oo_.exo_steady_state( 2 ) = M_.params(12);
oo_.steady_state( 29 ) = M_.params(12);
oo_.exo_steady_state( 3 ) = M_.params(14);
oo_.exo_steady_state( 4 ) = M_.params(16);
oo_.steady_state( 6 ) = M_.params(53);
oo_.steady_state( 9 ) = M_.params(53);
oo_.steady_state( 7 ) = M_.params(53)-1;
oo_.steady_state( 10 ) = M_.params(53)-1;
oo_.steady_state( 60 ) = M_.params(54);
oo_.steady_state( 22 ) = R_b_SS_H;
oo_.steady_state( 25 ) = R_b_SS_H;
oo_.steady_state( 23 ) = R_b_SS_H-1;
oo_.steady_state( 26 ) = R_b_SS_H-1;
oo_.steady_state( 46 ) = R_b_SS_H/M_.params(53);
oo_.steady_state( 43 ) = M_.params(76);
oo_.steady_state( 42 ) = M_.params(77);
oo_.steady_state( 44 ) = M_.params(78);
oo_.steady_state( 18 ) = M_.params(28);
oo_.steady_state( 2 ) = M_.params(28);
oo_.steady_state( 40 ) = M_.params(28);
oo_.steady_state( 14 ) = M_.params(101);
oo_.steady_state( 38 ) = M_.params(79);
oo_.steady_state( 15 ) = M_.params(100);
oo_.steady_state( 39 ) = M_.params(80);
oo_.steady_state( 36 ) = M_.params(81);
oo_.steady_state( 64 ) = M_.params(81);
oo_.steady_state( 32 ) = (-M_.params(62))*(1/M_.params(53)-1/R_b_SS_H);
oo_.steady_state( 1 ) = oo_.steady_state(44)*oo_.steady_state(2)+oo_.steady_state(32);
oo_.steady_state( 13 ) = (oo_.steady_state(36)-M_.params(90)*oo_.steady_state(1))/M_.params(23);
oo_.steady_state( 37 ) = oo_.steady_state(36)-M_.params(23)*oo_.steady_state(13)-M_.params(90)*oo_.steady_state(1);
oo_.steady_state( 24 ) = M_.params(58);
oo_.steady_state( 8 ) = M_.params(59);
oo_.steady_state( 21 ) = M_.params(60);
oo_.steady_state( 5 ) = M_.params(62);
oo_.exo_steady_state( 5 ) = M_.params(18);
oo_.steady_state( 73 ) = M_.params(94);
oo_.steady_state( 74 ) = M_.params(98);
oo_.steady_state( 72 ) = M_.params(96);
oo_.steady_state( 11 ) = M_.params(64);
oo_.steady_state( 27 ) = M_.params(65);
oo_.steady_state( 31 ) = M_.params(66);
oo_.steady_state( 28 ) = M_.params(67);
oo_.steady_state( 12 ) = M_.params(68);
oo_.steady_state( 53 ) = M_.params(33);
oo_.steady_state( 59 ) = M_.params(33);
oo_.steady_state( 49 ) = M_.params(33)*oo_.steady_state(6);
oo_.steady_state( 51 ) = M_.params(33)*oo_.steady_state(22);
oo_.steady_state( 55 ) = 0;
oo_.steady_state( 56 ) = 0;
oo_.steady_state( 50 ) = oo_.steady_state(49)-1;
oo_.steady_state( 52 ) = oo_.steady_state(51)-1;
oo_.steady_state( 54 ) = M_.params(33)-1;
oo_.steady_state( 34 ) = M_.params(58)*(1/M_.params(102)-1/R_b_SS_H);
oo_.steady_state( 35 ) = M_.params(59)*(1/M_.params(102)-1/M_.params(53));
oo_.steady_state( 33 ) = M_.params(23)*oo_.steady_state(34)+M_.params(90)*oo_.steady_state(35);
oo_.steady_state( 19 ) = M_.params(82);
oo_.steady_state( 20 ) = M_.params(83);
oo_.steady_state( 3 ) = M_.params(84);
oo_.steady_state( 4 ) = M_.params(85);
oo_.steady_state( 41 ) = M_.params(23)*oo_.steady_state(19)+M_.params(90)*oo_.steady_state(3);
oo_.steady_state( 45 ) = oo_.steady_state(3)/oo_.steady_state(41);
oo_.steady_state( 81 ) = oo_.steady_state(79)*oo_.steady_state(14)-oo_.steady_state(21)-oo_.steady_state(24);
oo_.steady_state( 79 ) = 1;
oo_.steady_state( 82 ) = oo_.steady_state(21)/(oo_.steady_state(79)*oo_.steady_state(14));
oo_.steady_state( 16 ) = 0;
oo_.steady_state( 17 ) = 0;
oo_.steady_state( 63 ) = 0;
oo_.steady_state( 76 ) = M_.params(3);
oo_.steady_state( 77 ) = M_.params(2);
oo_.steady_state( 80 ) = 1/M_.params(3);
oo_.steady_state( 78 ) = 1/M_.params(3);
oo_.steady_state( 61 ) = 0;
oo_.steady_state( 62 ) = 1/M_.params(2)-1-M_.params(23)*(M_.params(7)+M_.params(8))*(oo_.steady_state(21)/oo_.exo_steady_state(2)-1);
oo_.steady_state( 75 ) = M_.params(53)-1;
oo_.steady_state( 65 ) = oo_.steady_state(44)*oo_.steady_state(18)+oo_.steady_state(14)*oo_.steady_state(43)-oo_.steady_state(13);
oo_.steady_state( 66 ) = oo_.steady_state(21)/(4*oo_.steady_state(13));
oo_.steady_state( 67 ) = M_.params(23)*oo_.steady_state(24)/(4*oo_.steady_state(36));
oo_.steady_state( 68 ) = M_.params(23)*oo_.steady_state(21)/(4*oo_.steady_state(36));
oo_.steady_state( 69 ) = (1-M_.params(21))*oo_.steady_state(30)*oo_.steady_state(42)^M_.params(21)-oo_.steady_state(44);
oo_.steady_state( 70 ) = (oo_.steady_state(43)/M_.params(21))^M_.params(21)*(oo_.steady_state(44)/(1-M_.params(21)))^(1-M_.params(21))*1/oo_.steady_state(30);
oo_.steady_state( 71 ) = oo_.steady_state(70)/M_.params(93)-1;
oo_.steady_state( 83 ) = 4*oo_.steady_state(7);
oo_.steady_state( 84 ) = 4*oo_.steady_state(10);
oo_.steady_state( 85 ) = 4*oo_.steady_state(23);
oo_.steady_state( 86 ) = 4*oo_.steady_state(26);
oo_.steady_state( 87 ) = 4*(oo_.steady_state(46)-1);
oo_.steady_state( 88 ) = 4*(oo_.steady_state(78)/oo_.steady_state(6)-1);
oo_.steady_state( 89 ) = 4*oo_.steady_state(50);
oo_.steady_state( 92 ) = 4*oo_.steady_state(52);
oo_.steady_state( 93 ) = 4*oo_.steady_state(54);
oo_.steady_state( 94 ) = 4*(oo_.steady_state(60)-1);
oo_.steady_state( 95 ) = 4*(oo_.steady_state(59)-1);
oo_.steady_state( 96 ) = 4*(oo_.steady_state(78)-1);
oo_.steady_state( 98 ) = (1-M_.params(2)*M_.params(26))*((1-M_.params(26))*oo_.steady_state(41))^(-M_.params(5));
oo_.steady_state( 99 ) = M_.params(2);
oo_.steady_state( 100 ) = 1/M_.params(2);
oo_.steady_state( 101 ) = 4*(oo_.steady_state(100)-1);
oo_.steady_state( 104 ) = oo_.steady_state(49)/oo_.steady_state(100);
oo_.steady_state( 105 ) = 4*(oo_.steady_state(104)-1);
oo_.steady_state( 102 ) = oo_.steady_state(49)/oo_.steady_state(6);
oo_.steady_state( 103 ) = 4*(oo_.steady_state(102)-1);
oo_.steady_state( 106 ) = M_.params(53)-1+M_.params(33)-1+M_.params(31)*(oo_.steady_state(54)-(M_.params(33)-1))+M_.params(32)*oo_.steady_state(55);
oo_.steady_state( 107 ) = M_.params(53)-1+M_.params(33)-1+M_.params(31)*(oo_.steady_state(54)-(M_.params(33)-1))+M_.params(32)*oo_.steady_state(56);
oo_.exo_steady_state( 9 ) = 0;
oo_.steady_state( 57 ) = M_.params(103);
oo_.steady_state( 91 ) = 4*(oo_.steady_state(57)-1);
oo_.steady_state( 58 ) = oo_.steady_state(50);
oo_.steady_state( 90 ) = 4*oo_.steady_state(58);
oo_.exo_steady_state( 11 ) = 0;
oo_.steady_state( 47 ) = 1;
oo_.steady_state( 48 ) = 4*(oo_.steady_state(47)-1);
oo_.exo_steady_state( 10 ) = 0;
oo_.steady_state( 108 ) = 0;
oo_.steady_state( 109 ) = 1;
if M_.exo_nbr > 0
	oo_.exo_simul = ones(M_.maximum_lag,1)*oo_.exo_steady_state';
end
if M_.exo_det_nbr > 0
	oo_.exo_det_simul = ones(M_.maximum_lag,1)*oo_.exo_det_steady_state';
end
steady;
saved_steady_state_start  = [saved_steady_state_start oo_.steady_state] ;
%
% ENDVAL instructions
%
ys0_= oo_.steady_state;
ex0_ = oo_.exo_steady_state;
oo_.exo_steady_state( 7 ) = 0;
oo_.exo_steady_state( 8 ) = 1;
oo_.steady_state( 30 ) = M_.params(20);
oo_.exo_steady_state( 1 ) = 0;
oo_.exo_steady_state( 6 ) = 0;
oo_.steady_state( 97 ) = M_.params(22);
oo_.exo_steady_state( 2 ) = M_.params(13);
oo_.steady_state( 29 ) = M_.params(13);
oo_.exo_steady_state( 3 ) = M_.params(15);
oo_.exo_steady_state( 4 ) = M_.params(17);
oo_.steady_state( 6 ) = M_.params(53);
oo_.steady_state( 9 ) = M_.params(53);
oo_.steady_state( 7 ) = M_.params(53)-1;
oo_.steady_state( 10 ) = M_.params(53)-1;
oo_.steady_state( 60 ) = M_.params(54);
oo_.steady_state( 22 ) = R_b_SS_L;
oo_.steady_state( 25 ) = R_b_SS_L;
oo_.steady_state( 23 ) = R_b_SS_L-1;
oo_.steady_state( 26 ) = R_b_SS_L-1;
oo_.steady_state( 46 ) = R_b_SS_L/M_.params(53);
oo_.steady_state( 43 ) = M_.params(76);
oo_.steady_state( 42 ) = M_.params(77);
oo_.steady_state( 44 ) = M_.params(78);
oo_.steady_state( 18 ) = M_.params(28);
oo_.steady_state( 2 ) = M_.params(28);
oo_.steady_state( 40 ) = M_.params(28);
oo_.steady_state( 14 ) = M_.params(101);
oo_.steady_state( 38 ) = M_.params(79);
oo_.steady_state( 15 ) = M_.params(100);
oo_.steady_state( 39 ) = M_.params(80);
oo_.steady_state( 36 ) = M_.params(81);
oo_.steady_state( 64 ) = M_.params(81);
oo_.steady_state( 32 ) = (-M_.params(63))*(1/M_.params(53)-1/R_b_SS_L);
oo_.steady_state( 1 ) = oo_.steady_state(44)*oo_.steady_state(2)+oo_.steady_state(32);
oo_.steady_state( 13 ) = (oo_.steady_state(36)-M_.params(90)*oo_.steady_state(1))/M_.params(23);
oo_.steady_state( 37 ) = oo_.steady_state(36)-M_.params(23)*oo_.steady_state(13)-M_.params(90)*oo_.steady_state(1);
oo_.steady_state( 24 ) = M_.params(69);
oo_.steady_state( 8 ) = M_.params(70);
oo_.steady_state( 21 ) = M_.params(61);
oo_.steady_state( 5 ) = M_.params(63);
oo_.exo_steady_state( 5 ) = M_.params(19);
oo_.steady_state( 73 ) = M_.params(95);
oo_.steady_state( 74 ) = M_.params(99);
oo_.steady_state( 72 ) = M_.params(97);
oo_.steady_state( 11 ) = M_.params(71);
oo_.steady_state( 27 ) = M_.params(72);
oo_.steady_state( 31 ) = M_.params(73);
oo_.steady_state( 28 ) = M_.params(74);
oo_.steady_state( 12 ) = M_.params(75);
oo_.steady_state( 53 ) = M_.params(33);
oo_.steady_state( 59 ) = M_.params(33);
oo_.steady_state( 49 ) = M_.params(33)*oo_.steady_state(6);
oo_.steady_state( 51 ) = M_.params(33)*oo_.steady_state(22);
oo_.steady_state( 55 ) = 0;
oo_.steady_state( 56 ) = 0;
oo_.steady_state( 50 ) = oo_.steady_state(49)-1;
oo_.steady_state( 52 ) = oo_.steady_state(51)-1;
oo_.steady_state( 54 ) = M_.params(33)-1;
oo_.steady_state( 34 ) = M_.params(69)*(1/M_.params(102)-1/R_b_SS_L);
oo_.steady_state( 35 ) = M_.params(70)*(1/M_.params(102)-1/M_.params(53));
oo_.steady_state( 33 ) = M_.params(23)*oo_.steady_state(34)+M_.params(90)*oo_.steady_state(35);
oo_.steady_state( 19 ) = M_.params(86);
oo_.steady_state( 20 ) = M_.params(87);
oo_.steady_state( 3 ) = M_.params(88);
oo_.steady_state( 4 ) = M_.params(89);
oo_.steady_state( 41 ) = M_.params(23)*oo_.steady_state(19)+M_.params(90)*oo_.steady_state(3);
oo_.steady_state( 45 ) = oo_.steady_state(3)/oo_.steady_state(41);
oo_.steady_state( 81 ) = oo_.steady_state(79)*oo_.steady_state(14)-oo_.steady_state(21)-oo_.steady_state(24);
oo_.steady_state( 79 ) = 1;
oo_.steady_state( 82 ) = oo_.steady_state(21)/(oo_.steady_state(79)*oo_.steady_state(14));
oo_.steady_state( 63 ) = 0;
oo_.steady_state( 16 ) = 0;
oo_.steady_state( 17 ) = 0;
oo_.steady_state( 76 ) = M_.params(3);
oo_.steady_state( 77 ) = M_.params(2);
oo_.steady_state( 80 ) = 1/M_.params(3);
oo_.steady_state( 78 ) = 1/M_.params(3);
oo_.steady_state( 61 ) = 0;
oo_.steady_state( 62 ) = 1/M_.params(2)-1-M_.params(23)*(M_.params(7)+M_.params(8))*(oo_.steady_state(21)/oo_.exo_steady_state(2)-1);
oo_.steady_state( 75 ) = M_.params(53)-1;
oo_.steady_state( 65 ) = oo_.steady_state(44)*oo_.steady_state(18)+oo_.steady_state(14)*oo_.steady_state(43)-oo_.steady_state(13);
oo_.steady_state( 66 ) = oo_.steady_state(21)/(4*oo_.steady_state(13));
oo_.steady_state( 67 ) = M_.params(23)*oo_.steady_state(24)/(4*oo_.steady_state(36));
oo_.steady_state( 68 ) = M_.params(23)*oo_.steady_state(21)/(4*oo_.steady_state(36));
oo_.steady_state( 69 ) = (1-M_.params(21))*oo_.steady_state(30)*oo_.steady_state(42)^M_.params(21)-oo_.steady_state(44);
oo_.steady_state( 70 ) = (oo_.steady_state(43)/M_.params(21))^M_.params(21)*(oo_.steady_state(44)/(1-M_.params(21)))^(1-M_.params(21))*1/oo_.steady_state(30);
oo_.steady_state( 71 ) = oo_.steady_state(70)/M_.params(93)-1;
oo_.steady_state( 83 ) = 4*oo_.steady_state(7);
oo_.steady_state( 84 ) = 4*oo_.steady_state(10);
oo_.steady_state( 85 ) = 4*oo_.steady_state(23);
oo_.steady_state( 86 ) = 4*oo_.steady_state(26);
oo_.steady_state( 87 ) = 4*(oo_.steady_state(46)-1);
oo_.steady_state( 88 ) = 4*(oo_.steady_state(78)/oo_.steady_state(6)-1);
oo_.steady_state( 89 ) = 4*oo_.steady_state(50);
oo_.steady_state( 92 ) = 4*oo_.steady_state(52);
oo_.steady_state( 93 ) = 4*oo_.steady_state(54);
oo_.steady_state( 94 ) = 4*(oo_.steady_state(60)-1);
oo_.steady_state( 95 ) = 4*(oo_.steady_state(59)-1);
oo_.steady_state( 96 ) = 4*(oo_.steady_state(78)-1);
oo_.steady_state( 98 ) = (1-M_.params(2)*M_.params(26))*((1-M_.params(26))*oo_.steady_state(41))^(-M_.params(5));
oo_.steady_state( 99 ) = M_.params(2);
oo_.steady_state( 100 ) = 1/M_.params(2);
oo_.steady_state( 101 ) = 4*(oo_.steady_state(100)-1);
oo_.steady_state( 104 ) = oo_.steady_state(49)/oo_.steady_state(100);
oo_.steady_state( 105 ) = 4*(oo_.steady_state(104)-1);
oo_.steady_state( 102 ) = oo_.steady_state(49)/oo_.steady_state(6);
oo_.steady_state( 103 ) = 4*(oo_.steady_state(102)-1);
oo_.steady_state( 106 ) = M_.params(53)-1+M_.params(33)-1+M_.params(31)*(oo_.steady_state(54)-(M_.params(33)-1))+M_.params(32)*oo_.steady_state(55);
oo_.steady_state( 107 ) = M_.params(53)-1+M_.params(33)-1+M_.params(31)*(oo_.steady_state(54)-(M_.params(33)-1))+M_.params(32)*oo_.steady_state(56);
oo_.exo_steady_state( 9 ) = 0;
oo_.steady_state( 57 ) = M_.params(103);
oo_.steady_state( 91 ) = 4*(oo_.steady_state(57)-1);
oo_.steady_state( 58 ) = oo_.steady_state(50);
oo_.steady_state( 90 ) = 4*oo_.steady_state(58);
oo_.exo_steady_state( 11 ) = 0;
oo_.steady_state( 47 ) = 1;
oo_.steady_state( 48 ) = 4*(oo_.steady_state(47)-1);
oo_.exo_steady_state( 10 ) = 0;
oo_.steady_state( 108 ) = 0;
oo_.steady_state( 109 ) = 1;
steady;
saved_steady_state_end  = [saved_steady_state_end oo_.steady_state] ;
%
% SHOCKS instructions
%
M_.det_shocks = [ M_.det_shocks;
struct('exo_det',0,'exo_id',1,'multiplicative',0,'periods',1:1,'value',1) ];
M_.det_shocks = [ M_.det_shocks;
struct('exo_det',0,'exo_id',6,'multiplicative',0,'periods',1:1,'value',1) ];
M_.det_shocks = [ M_.det_shocks;
struct('exo_det',0,'exo_id',7,'multiplicative',0,'periods',1:200,'value',0) ];
M_.det_shocks = [ M_.det_shocks;
struct('exo_det',0,'exo_id',8,'multiplicative',0,'periods',1:200,'value',vector_ExoZeroRate) ];
M_.det_shocks = [ M_.det_shocks;
struct('exo_det',0,'exo_id',9,'multiplicative',0,'periods',1:1,'value',1) ];
M_.det_shocks = [ M_.det_shocks;
struct('exo_det',0,'exo_id',10,'multiplicative',0,'periods',1:1,'value',1) ];
M_.det_shocks = [ M_.det_shocks;
struct('exo_det',0,'exo_id',11,'multiplicative',0,'periods',1:1,'value',1) ];
M_.exo_det_length = 0;
options_.periods = 200;
options_.simul.maxit = 500;
perfect_foresight_setup;
perfect_foresight_solver;
saved_irfs(:,:,scenario) 	  	= oo_.endo_simul ;     
if scenario==1
save.params.names	= cellstr(M_.param_names);
save.params.values	= [];
save.endo.names		= cellstr(M_.endo_names);	
save.endo.std		= [];	
save.endo.autocorr	= [];
end
save.params.values=[save.params.values M_.params];     
end  
close all;
disp('Save Parameters and Steady State to Excel');
xlswrite(filename, {'End simulations at: ' , datestr(clock)}, 'output', 'H2');
xlswrite(filename,  {'Parameters ' , 'Value'}	, 'output', 'A1');
xlswrite(filename, save.params.names  	, 'output', 'A2');
xlswrite(filename, save.params.values 	, 'output', 'B2');
xlswrite(filename, {'Varibles' , 'End - Steady State'} , 'output', 'J1');
xlswrite(filename, save.endo.names 	, 'output', 'J2');
xlswrite(filename, saved_steady_state_end , 'output','K2');
xlswrite(filename, {'Start -  Steady State'} , 'output', 'Q1');
xlswrite(filename, saved_steady_state_start , 'output','Q2');
mkdir('fig');
mkdir('emf');
mkdir('eps');	
mkdir('pdf');	
mkdir('png');	
fontname = 'Times New Roman' ; 
set(0,'DefaultAxesFontName',fontname);
set(0,'DefaultTextFontName',fontname);
set(0,'DefaultAxesFontSize',8);
set(0,'DefaultTextFontSize',8)
for fig_num = 1:size(disply,1)
disp(['Drawing & Saving Figure number ', num2str(fig_num), ' of ' ,num2str(size(disply,1))]);
choice 			= disply{fig_num};
choice_display 	= choice_display_arr{fig_num};
choice_save_xls	= choice_save_xls_arr{fig_num}	 ;
name = M_.endo_names;
figure_filename = num2str(fig_num);
figure1 = figure('Name',figure_filename,'Color',[1 1 1]);  
x_plots=  size(choice,1);
y_plots=  size(choice,2);
choice=choice';
choice_display  = choice_display';
choice_save_xls = choice_save_xls';	
for IRF_num =1:numel(choice) 		
fprintf('%s| ',  char(choice(IRF_num)));
temp=[];    
for scenario=1:size(saved_irfs,3)        
varible_number =  find(ismember(save.endo.names,choice(IRF_num)));
vec    = squeeze(saved_irfs(varible_number,:,scenario));  
if  (choice_display(IRF_num)==0)				
disp_type = '\Delta^{from}_{new.ss}' ;
vec = vec - saved_steady_state_end(varible_number,scenario)   ;				
if (start_t==0), vec= [0 vec] ,	end;				
elseif (choice_display(IRF_num)==1)							
disp_type = ' \% \Delta^{from}_{new.ss}' ;
vec = vec ./ saved_steady_state_end(varible_number,scenario) - 1 ;
if (start_t==0), vec= [0 vec] ,	end;					
elseif (choice_display(IRF_num)==2)
disp_type = ' Value ' ;
if (start_t==0)	, vec= [saved_steady_state_end(varible_number,scenario)  vec] ,	end;							
elseif (choice_display(IRF_num)==3)
disp_type = ' Value ' ;
vec = saved_steady_state_end(varible_number,scenario) * exp(vec) ;
if (start_t==0)	, vec= [exp(saved_steady_state_end(varible_number,scenario))  vec] ,	end;				
end; 
temp =[temp , vec'];      					
end 
if or(choice_display(IRF_num)==0 , choice_display(IRF_num)==1)
temp=[temp , zeros(length(vec),1)];  
elseif or(choice_display(IRF_num)==2 , choice_display(IRF_num)==3)
temp=[temp , ones(length(vec),1)*saved_steady_state_end(varible_number,scenario)]; 
end;
subplot(x_plots,y_plots,IRF_num); 		
x_temp = 0 : irf_periods_to_disp ; 
y_temp = 1 : length(x_temp) ; 		 		
plot1 = plot(x_temp,temp(y_temp,:)); 
y_plot_min = min(min(temp(y_temp,:)));
y_plot_max = max(max(temp(y_temp,:)));		
set(plot1,'LineWidth',1.2);		
for scenario = 1:tot_Graph_num				
irf_MarkerSize =  input_M(64,scenario);
if ~isnan(irf_MarkerSize) , set(plot1(scenario),'MarkerSize',irf_MarkerSize) , end;															
irf_MarkerEdgeColor =  char(input_name(65,scenario+1));
if ~isnan(irf_MarkerEdgeColor) ,set(plot1(scenario),'MarkerEdgeColor',irf_MarkerEdgeColor), end;				
irf_Marker			=  char(input_name(66,scenario+1));
if ~isnan(irf_Marker) ,set(plot1(scenario),'Marker',irf_Marker), end;				
irf_LineWidth		=  input_M(67,scenario);
if ~isnan(irf_LineWidth) , set(plot1(scenario),'LineWidth',irf_LineWidth), end;				
irf_LineStyle		=  char(input_name(68,scenario+1));
if ~isnan(irf_LineStyle) ,set(plot1(scenario),'LineStyle',irf_LineStyle), end;				
irf_Color			=  char(input_name(69,scenario+1));
if ~isnan(irf_Color) , set(plot1(scenario),'Color',irf_Color), end;					
end; 
set(plot1(tot_Graph_num+1),'LineWidth',1,'LineStyle',':','Color','black');				
y_plot_margin = (y_plot_max - y_plot_min)* 0.05  ; 		
if (y_plot_margin > 0.00001)		
ylim([ y_plot_min - y_plot_margin  , y_plot_max + y_plot_margin  ]);						
end;					
title_name = ['$$   ', M_.endo_names_tex(varible_number,:) , '\ \ \ \ \ (\ ' , disp_type , '\ )',' $$' ] ; 
title( title_name , 'interpreter' , 'latex','fontsize',8 )	;
axis on					
if(save_irf_xls==1)&&(choice_save_xls(IRF_num)==1)				
IRF_name=strtrim( M_.endo_names(varible_number,:) );
xlswrite(filename, {'Saved at: ' , datestr(clock)}  , IRF_name , 'K1');			
xlswrite(filename, cellstr( title_name )  		,IRF_name  , 'A1');
xlswrite(filename, input_M(1,:)					,IRF_name  , 'B2');
xlswrite(filename, [(0:length(temp)-1)'	,temp]	,IRF_name  , 'A3');
end; 
if (fig_num==Legend_Fig_Num)&&(IRF_num==Legend_subPlot_Num)  
LegendText=[];
for parm_i=params_display
LegendText=[LegendText  repmat( [strtrim(M_.param_names_tex(parm_i,:)) '='],tot_Graph_num,1) num2str( input_M(parm_i,:)') repmat(', ',tot_Graph_num,1)];  
end;			
hleg=legend(LegendText);
if verLessThan('matlab','8.4')
set(hleg,'YColor',[1 1 1],'XColor',[1 1 1],'fontsize',6);
else
hleg.FontSize=6;
end
end 
end 
fprintf(' ...now saving figures \n');
cd('fig');	
saveas(gcf,figure_filename);				
cd('../emf');	
print('-dmeta','-r600',figure_filename);
cd('../eps');
print('-depsc2','-tiff','-r600',figure_filename)
cd('../pdf');
print('-dpdf','-r600',figure_filename);	
cd('../png');
print('-dpng','-r600',figure_filename);
cd('../');
close all;		
end; 
xlswrite(filename,{'End saving results: ', datestr(clock)}, 'output', 'H3');
save('my_BER_results.mat', 'oo_', 'M_', 'options_');
if exist('estim_params_', 'var') == 1
  save('my_BER_results.mat', 'estim_params_', '-append');
end
if exist('bayestopt_', 'var') == 1
  save('my_BER_results.mat', 'bayestopt_', '-append');
end
if exist('dataset_', 'var') == 1
  save('my_BER_results.mat', 'dataset_', '-append');
end
if exist('estimation_info', 'var') == 1
  save('my_BER_results.mat', 'estimation_info', '-append');
end
if exist('dataset_info', 'var') == 1
  save('my_BER_results.mat', 'dataset_info', '-append');
end
if exist('oo_recursive_', 'var') == 1
  save('my_BER_results.mat', 'oo_recursive_', '-append');
end


disp(['Total computing time : ' dynsec2hms(toc(tic0)) ]);
if ~isempty(lastwarn)
  disp('Note: warning(s) encountered in MATLAB/Octave code')
end
diary off
