function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
% function g1 = dynamic_g1(T, y, x, params, steady_state, it_, T_flag)
%
% File created by Dynare Preprocessor from .mod file
%
% Inputs:
%   T             [#temp variables by 1]     double   vector of temporary terms to be filled by function
%   y             [#dynamic variables by 1]  double   vector of endogenous variables in the order stored
%                                                     in M_.lead_lag_incidence; see the Manual
%   x             [nperiods by M_.exo_nbr]   double   matrix of exogenous variables (in declaration order)
%                                                     for all simulation periods
%   steady_state  [M_.endo_nbr by 1]         double   vector of steady state values
%   params        [M_.param_nbr by 1]        double   vector of parameter values in declaration order
%   it_           scalar                     double   time period for exogenous variables for which
%                                                     to evaluate the model
%   T_flag        boolean                    boolean  flag saying whether or not to calculate temporary terms
%
% Output:
%   g1
%

if T_flag
    T = QPMwCredit_24_5_22_nim.dynamic_g1_tt(T, y, x, params, steady_state, it_);
end
g1 = zeros(55, 125);
g1(1,1)=(-(1-params(1)));
g1(1,27)=1;
g1(1,82)=(-params(1));
g1(1,6)=params(3);
g1(1,109)=(-1);
g1(2,1)=(-params(5));
g1(2,32)=1;
g1(2,4)=(-(1-params(4)));
g1(2,110)=(-1);
g1(2,99)=(-params(4));
g1(3,27)=(-((1-params(6))*params(8)));
g1(3,31)=(-(1-params(6)));
g1(3,7)=(-params(6));
g1(3,36)=1;
g1(3,111)=(-1);
g1(3,99)=(-((1-params(6))*params(7)));
g1(3,102)=(-((1-params(6))*(1-params(7))));
g1(4,5)=(-params(9));
g1(4,34)=1;
g1(4,112)=(-1);
g1(5,84)=(-(4*params(48)));
g1(5,31)=1;
g1(5,113)=(-1);
g1(6,2)=(-params(13));
g1(6,29)=1;
g1(6,114)=(-1);
g1(7,30)=(-1);
g1(7,31)=1;
g1(7,35)=1;
g1(8,3)=(-0.25);
g1(8,32)=(-0.25);
g1(8,33)=1;
g1(8,23)=(-0.25);
g1(8,24)=(-0.25);
g1(9,30)=1;
g1(9,85)=1;
g1(9,36)=(-1);
g1(10,1)=1;
g1(10,27)=(-1);
g1(10,28)=1;
g1(10,29)=(-1);
g1(11,27)=(-params(19));
g1(11,8)=(-(1-params(15)));
g1(11,37)=1;
g1(11,88)=(-params(15));
g1(11,13)=params(17);
g1(11,17)=(-params(18));
g1(11,116)=(-1);
g1(12,8)=(-params(22));
g1(12,43)=1;
g1(12,11)=(-(1-params(21)));
g1(12,18)=(-params(25));
g1(12,54)=(-params(24));
g1(12,55)=(-params(23));
g1(12,117)=(-1);
g1(12,105)=(-params(21));
g1(13,30)=(-0.25);
g1(13,40)=0.25;
g1(13,15)=(-(1-params(41)));
g1(13,48)=1;
g1(13,93)=(-params(41));
g1(13,51)=(-0.25);
g1(14,37)=(-((1-params(26))*params(28)));
g1(14,41)=(-((1-params(26))*(1-params(60))));
g1(14,42)=(-((1-params(26))*params(60)));
g1(14,44)=(-((1-params(26))*0.25*params(27)));
g1(14,14)=(-params(26));
g1(14,47)=1;
g1(14,55)=(-((1-params(26))*params(29)));
g1(14,118)=(-1);
g1(14,105)=(-((1-params(26))*params(27)*0.75));
g1(14,108)=(-((1-params(26))*(1-params(27))));
g1(15,14)=1;
g1(15,47)=(-1);
g1(15,63)=1;
g1(16,38)=(-4);
g1(16,39)=4;
g1(16,64)=1;
g1(17,12)=(-params(30));
g1(17,45)=1;
g1(17,119)=(-1);
g1(18,83)=(-(4*params(52)));
g1(18,89)=(-(4*params(51)));
g1(18,41)=1;
g1(18,58)=params(53);
g1(18,65)=(-params(54));
g1(18,96)=params(54);
g1(18,120)=(-1);
g1(19,83)=(-(4*params(52)));
g1(19,89)=(-(4*params(51)));
g1(19,42)=1;
g1(19,120)=(-1);
g1(20,28)=(-params(46));
g1(20,9)=(-params(34));
g1(20,39)=1;
g1(20,16)=params(47);
g1(20,49)=(-params(47));
g1(20,121)=1;
g1(21,31)=1;
g1(21,41)=(-1);
g1(21,49)=(-4);
g1(21,94)=4;
g1(21,51)=1;
g1(21,122)=(-1);
g1(22,16)=(-params(42));
g1(22,49)=1;
g1(22,56)=(-1);
g1(23,19)=(-params(45));
g1(23,56)=1;
g1(23,124)=(-1);
g1(24,18)=(-params(36));
g1(24,54)=1;
g1(24,125)=(-1);
g1(25,40)=(-1);
g1(25,41)=1;
g1(25,46)=1;
g1(26,10)=(-0.25);
g1(26,43)=(-0.25);
g1(26,44)=1;
g1(26,25)=(-0.25);
g1(26,26)=(-0.25);
g1(27,40)=1;
g1(27,90)=1;
g1(27,47)=(-1);
g1(28,48)=(-1);
g1(28,49)=1;
g1(28,50)=1;
g1(29,32)=0.25;
g1(29,43)=(-0.25);
g1(29,15)=1;
g1(29,48)=(-1);
g1(29,52)=1;
g1(30,8)=1;
g1(30,37)=(-1);
g1(30,38)=1;
g1(30,39)=(-1);
g1(31,53)=1;
g1(32,15)=1;
g1(32,48)=(-1);
g1(32,55)=1;
g1(33,58)=1;
g1(33,61)=(-params(55));
g1(33,62)=(-1);
g1(34,22)=(-params(56));
g1(34,62)=1;
g1(34,123)=(-1);
g1(35,37)=1;
g1(35,59)=(-1);
g1(35,61)=1;
g1(36,47)=(-1);
g1(36,57)=1;
g1(36,58)=(-1);
g1(37,37)=1.05;
g1(37,39)=1.0075;
g1(37,43)=0.251875;
g1(37,57)=(-0.25);
g1(37,20)=(-1.0075);
g1(37,59)=1;
g1(37,60)=(-1.05);
g1(38,89)=params(17)*params(20)*(-4);
g1(38,90)=(-(params(17)*params(20)));
g1(38,57)=params(17)*params(20);
g1(38,21)=(-(1-params(15)));
g1(38,60)=1;
g1(38,95)=(-params(15));
g1(38,61)=params(17)*params(20)*params(59);
g1(38,65)=(-1);
g1(38,96)=1;
g1(39,65)=1;
g1(39,115)=(-1);
g1(40,86)=(-1);
g1(40,66)=1;
g1(41,97)=(-1);
g1(41,67)=1;
g1(42,98)=(-1);
g1(42,68)=1;
g1(43,87)=(-1);
g1(43,69)=1;
g1(44,100)=(-1);
g1(44,70)=1;
g1(45,101)=(-1);
g1(45,71)=1;
g1(46,91)=(-1);
g1(46,72)=1;
g1(47,103)=(-1);
g1(47,73)=1;
g1(48,104)=(-1);
g1(48,74)=1;
g1(49,92)=(-1);
g1(49,75)=1;
g1(50,106)=(-1);
g1(50,76)=1;
g1(51,107)=(-1);
g1(51,77)=1;
g1(52,3)=(-1);
g1(52,78)=1;
g1(53,23)=(-1);
g1(53,79)=1;
g1(54,10)=(-1);
g1(54,80)=1;
g1(55,25)=(-1);
g1(55,81)=1;

end
